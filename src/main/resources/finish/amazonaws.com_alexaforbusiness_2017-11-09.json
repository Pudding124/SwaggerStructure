{
  "swagger": "2.0",
  "schemes": [
    "https",
    "http"
  ],
  "host": "a4b.amazonaws.com",
  "basePath": "/",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "Alexa for Business helps you use Alexa in your organization. Alexa for Business provides you with the tools to manage Alexa devices, enroll your users, and assign skills, at scale. You can build your own context-aware voice skills using the Alexa Skills Kit and the Alexa for Business API operations. You can also make these available as private skills for your organization. Alexa for Business makes it efficient to voice-enable your products and services, thus providing context-aware voice experiences for your customers. Device makers building with the Alexa Voice Service (AVS) can create fully integrated solutions, register their products with Alexa for Business, and manage them as shared devices in their organization. ",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Alexa For Business",
    "version": "2017-11-09",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/alexaforbusiness-2017-11-09.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "alexaforbusiness"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/a4b/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "query",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "query",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Associates a skill with the organization under the customer's AWS account. If a skill is private, the user implicitly accepts access to this skill during enablement.",
        "operationId": "ApproveSkill",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApproveSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApproveSkillResponse"
            }
          },
          "480": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#AssociateContactWithAddressBook": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Associates a contact with a given address book.",
        "operationId": "AssociateContactWithAddressBook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateContactWithAddressBookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateContactWithAddressBookResponse"
            }
          },
          "480": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        }
      }
    },
    "/#AssociateDeviceWithRoom": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Associates a device with a given room. This applies all the settings from the room profile to the device, and all the skills in any skill groups added to that room. This operation requires the device to be online, or else a manual sync is required. ",
        "operationId": "AssociateDeviceWithRoom",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateDeviceWithRoomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateDeviceWithRoomResponse"
            }
          },
          "480": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          },
          "482": {
            "description": "DeviceNotRegisteredException",
            "schema": {
              "$ref": "#/definitions/DeviceNotRegisteredException"
            }
          }
        }
      }
    },
    "/#AssociateSkillGroupWithRoom": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Associates a skill group with a given room. This enables all skills in the associated skill group on all devices in the room.",
        "operationId": "AssociateSkillGroupWithRoom",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateSkillGroupWithRoomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateSkillGroupWithRoomResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#AssociateSkillWithSkillGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Associates a skill with a skill group.",
        "operationId": "AssociateSkillWithSkillGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateSkillWithSkillGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateSkillWithSkillGroupResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "SkillNotLinkedException",
            "schema": {
              "$ref": "#/definitions/SkillNotLinkedException"
            }
          }
        }
      }
    },
    "/#AssociateSkillWithUsers": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Makes a private skill available for enrolled users to enable on their devices.",
        "operationId": "AssociateSkillWithUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateSkillWithUsersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateSkillWithUsersResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#CreateAddressBook": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates an address book with the specified details.",
        "operationId": "CreateAddressBook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAddressBookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAddressBookResponse"
            }
          },
          "480": {
            "description": "AlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/AlreadyExistsException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        }
      }
    },
    "/#CreateBusinessReportSchedule": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a recurring schedule for usage reports to deliver to the specified S3 location with a specified daily or weekly interval.",
        "operationId": "CreateBusinessReportSchedule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBusinessReportScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBusinessReportScheduleResponse"
            }
          },
          "480": {
            "description": "AlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/AlreadyExistsException"
            }
          }
        }
      }
    },
    "/#CreateConferenceProvider": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Adds a new conference provider under the user's AWS account.",
        "operationId": "CreateConferenceProvider",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateConferenceProviderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateConferenceProviderResponse"
            }
          },
          "480": {
            "description": "AlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/AlreadyExistsException"
            }
          }
        }
      }
    },
    "/#CreateContact": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a contact with the specified details.",
        "operationId": "CreateContact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateContactResponse"
            }
          },
          "480": {
            "description": "AlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/AlreadyExistsException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        }
      }
    },
    "/#CreateProfile": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a new room profile with the specified details.",
        "operationId": "CreateProfile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateProfileResponse"
            }
          },
          "480": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "481": {
            "description": "AlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/AlreadyExistsException"
            }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#CreateRoom": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a room with the specified details.",
        "operationId": "CreateRoom",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRoomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRoomResponse"
            }
          },
          "480": {
            "description": "AlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/AlreadyExistsException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        }
      }
    },
    "/#CreateSkillGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a skill group with a specified name and description.",
        "operationId": "CreateSkillGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSkillGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateSkillGroupResponse"
            }
          },
          "480": {
            "description": "AlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/AlreadyExistsException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#CreateUser": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a user.",
        "operationId": "CreateUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "480": {
            "description": "ResourceInUseException",
            "schema": {
              "$ref": "#/definitions/ResourceInUseException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DeleteAddressBook": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes an address book by the address book ARN.",
        "operationId": "DeleteAddressBook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAddressBookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAddressBookResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DeleteBusinessReportSchedule": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes the recurring report delivery schedule with the specified schedule ARN.",
        "operationId": "DeleteBusinessReportSchedule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteBusinessReportScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBusinessReportScheduleResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DeleteConferenceProvider": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes a conference provider.",
        "operationId": "DeleteConferenceProvider",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteConferenceProviderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteConferenceProviderResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#DeleteContact": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes a contact by the contact ARN.",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteContactResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DeleteDevice": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Removes a device from Alexa For Business.",
        "operationId": "DeleteDevice",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDeviceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteDeviceResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          },
          "482": {
            "description": "InvalidCertificateAuthorityException",
            "schema": {
              "$ref": "#/definitions/InvalidCertificateAuthorityException"
            }
          }
        }
      }
    },
    "/#DeleteProfile": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes a room profile by the profile ARN.",
        "operationId": "DeleteProfile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteProfileResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DeleteRoom": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes a room by the room ARN.",
        "operationId": "DeleteRoom",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRoomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteRoomResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DeleteRoomSkillParameter": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes room skill parameter details by room, skill, and parameter key ID.",
        "operationId": "DeleteRoomSkillParameter",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRoomSkillParameterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteRoomSkillParameterResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DeleteSkillAuthorization": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Unlinks a third-party account from a skill.",
        "operationId": "DeleteSkillAuthorization",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteSkillAuthorizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteSkillAuthorizationResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DeleteSkillGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes a skill group by skill group ARN.",
        "operationId": "DeleteSkillGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteSkillGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteSkillGroupResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DeleteUser": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes a specified user by user ARN and enrollment ARN.",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteUserResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DisassociateContactFromAddressBook": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Disassociates a contact from a given address book.",
        "operationId": "DisassociateContactFromAddressBook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisassociateContactFromAddressBookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateContactFromAddressBookResponse"
            }
          }
        }
      }
    },
    "/#DisassociateDeviceFromRoom": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Disassociates a device from its current room. The device continues to be connected to the Wi-Fi network and is still registered to the account. The device settings and skills are removed from the room.",
        "operationId": "DisassociateDeviceFromRoom",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisassociateDeviceFromRoomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateDeviceFromRoomResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          },
          "481": {
            "description": "DeviceNotRegisteredException",
            "schema": {
              "$ref": "#/definitions/DeviceNotRegisteredException"
            }
          }
        }
      }
    },
    "/#DisassociateSkillFromSkillGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Disassociates a skill from a skill group.",
        "operationId": "DisassociateSkillFromSkillGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisassociateSkillFromSkillGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateSkillFromSkillGroupResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#DisassociateSkillFromUsers": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Makes a private skill unavailable for enrolled users and prevents them from enabling it on their devices.",
        "operationId": "DisassociateSkillFromUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisassociateSkillFromUsersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateSkillFromUsersResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#DisassociateSkillGroupFromRoom": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Disassociates a skill group from a specified room. This disables all skills in the skill group on all devices in the room.",
        "operationId": "DisassociateSkillGroupFromRoom",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisassociateSkillGroupFromRoomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateSkillGroupFromRoomResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#ForgetSmartHomeAppliances": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Forgets smart home appliances associated to a room.",
        "operationId": "ForgetSmartHomeAppliances",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgetSmartHomeAppliancesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ForgetSmartHomeAppliancesResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#GetAddressBook": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Gets address the book details by the address book ARN.",
        "operationId": "GetAddressBook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAddressBookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAddressBookResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#GetConferencePreference": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Retrieves the existing conference preferences.",
        "operationId": "GetConferencePreference",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConferencePreferenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetConferencePreferenceResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#GetConferenceProvider": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Gets details about a specific conference provider.",
        "operationId": "GetConferenceProvider",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConferenceProviderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetConferenceProviderResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#GetContact": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Gets the contact details by the contact ARN.",
        "operationId": "GetContact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetContactResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#GetDevice": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Gets the details of a device by device ARN.",
        "operationId": "GetDevice",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDeviceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDeviceResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#GetProfile": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Gets the details of a room profile by profile ARN.",
        "operationId": "GetProfile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetProfileResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#GetRoom": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Gets room details by room ARN.",
        "operationId": "GetRoom",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetRoomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetRoomResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#GetRoomSkillParameter": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Gets room skill parameter details by room, skill, and parameter key ARN.",
        "operationId": "GetRoomSkillParameter",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetRoomSkillParameterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetRoomSkillParameterResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#GetSkillGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Gets skill group details by skill group ARN.",
        "operationId": "GetSkillGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSkillGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSkillGroupResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#ListBusinessReportSchedules": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists the details of the schedules that a user configured.",
        "operationId": "ListBusinessReportSchedules",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListBusinessReportSchedulesRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListBusinessReportSchedulesResponse"
            }
          }
        }
      }
    },
    "/#ListConferenceProviders": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists conference providers under a specific AWS account.",
        "operationId": "ListConferenceProviders",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListConferenceProvidersRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListConferenceProvidersResponse"
            }
          }
        }
      }
    },
    "/#ListDeviceEvents": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists the device event history, including device connection status, for up to 30 days.",
        "operationId": "ListDeviceEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListDeviceEventsRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDeviceEventsResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#ListSkills": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists all enabled skills in a specific skill group.",
        "operationId": "ListSkills",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListSkillsRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSkillsResponse"
            }
          }
        }
      }
    },
    "/#ListSkillsStoreCategories": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists all categories in the Alexa skill store.",
        "operationId": "ListSkillsStoreCategories",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListSkillsStoreCategoriesRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSkillsStoreCategoriesResponse"
            }
          }
        }
      }
    },
    "/#ListSkillsStoreSkillsByCategory": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists all skills in the Alexa skill store by category.",
        "operationId": "ListSkillsStoreSkillsByCategory",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListSkillsStoreSkillsByCategoryRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSkillsStoreSkillsByCategoryResponse"
            }
          }
        }
      }
    },
    "/#ListSmartHomeAppliances": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists all of the smart home appliances associated with a room.",
        "operationId": "ListSmartHomeAppliances",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListSmartHomeAppliancesRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSmartHomeAppliancesResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#ListTags": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists all tags for the specified resource.",
        "operationId": "ListTags",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTagsRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#PutConferencePreference": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Sets the conference preferences on a specific conference provider at the account level.",
        "operationId": "PutConferencePreference",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutConferencePreferenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutConferencePreferenceResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#PutRoomSkillParameter": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates room skill parameter details by room, skill, and parameter key ID. Not all skills have a room skill parameter.",
        "operationId": "PutRoomSkillParameter",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutRoomSkillParameterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutRoomSkillParameterResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#PutSkillAuthorization": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Links a user's account to a third-party skill provider. If this API operation is called by an assumed IAM role, the skill being linked must be a private skill. Also, the skill must be owned by the AWS account that assumed the IAM role.",
        "operationId": "PutSkillAuthorization",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutSkillAuthorizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutSkillAuthorizationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#RegisterAVSDevice": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Registers an Alexa-enabled device built by an Original Equipment Manufacturer (OEM) using Alexa Voice Service (AVS).",
        "operationId": "RegisterAVSDevice",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterAVSDeviceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegisterAVSDeviceResponse"
            }
          },
          "480": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          },
          "482": {
            "description": "InvalidDeviceException",
            "schema": {
              "$ref": "#/definitions/InvalidDeviceException"
            }
          }
        }
      }
    },
    "/#RejectSkill": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Disassociates a skill from the organization under a user's AWS account. If the skill is a private skill, it moves to an AcceptStatus of PENDING. Any private or public skill that is rejected can be added later by calling the ApproveSkill API. ",
        "operationId": "RejectSkill",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RejectSkillResponse"
            }
          },
          "480": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#ResolveRoom": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Determines the details for the room from which a skill request was invoked. This operation is used by skill developers.",
        "operationId": "ResolveRoom",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResolveRoomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResolveRoomResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#RevokeInvitation": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Revokes an invitation and invalidates the enrollment URL.",
        "operationId": "RevokeInvitation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RevokeInvitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RevokeInvitationResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#SearchAddressBooks": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Searches address books and lists the ones that meet a set of filter and sort criteria.",
        "operationId": "SearchAddressBooks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchAddressBooksRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchAddressBooksResponse"
            }
          }
        }
      }
    },
    "/#SearchContacts": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Searches contacts and lists the ones that meet a set of filter and sort criteria.",
        "operationId": "SearchContacts",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchContactsRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchContactsResponse"
            }
          }
        }
      }
    },
    "/#SearchDevices": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Searches devices and lists the ones that meet a set of filter criteria.",
        "operationId": "SearchDevices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchDevicesRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchDevicesResponse"
            }
          }
        }
      }
    },
    "/#SearchProfiles": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Searches room profiles and lists the ones that meet a set of filter criteria.",
        "operationId": "SearchProfiles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchProfilesRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchProfilesResponse"
            }
          }
        }
      }
    },
    "/#SearchRooms": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Searches rooms and lists the ones that meet a set of filter and sort criteria.",
        "operationId": "SearchRooms",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchRoomsRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchRoomsResponse"
            }
          }
        }
      }
    },
    "/#SearchSkillGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Searches skill groups and lists the ones that meet a set of filter and sort criteria.",
        "operationId": "SearchSkillGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchSkillGroupsRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchSkillGroupsResponse"
            }
          }
        }
      }
    },
    "/#SearchUsers": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Searches users and lists the ones that meet a set of filter and sort criteria.",
        "operationId": "SearchUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchUsersRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchUsersResponse"
            }
          }
        }
      }
    },
    "/#SendInvitation": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Sends an enrollment invitation email with a URL to a user. The URL is valid for 72 hours or until you call this operation again, whichever comes first. ",
        "operationId": "SendInvitation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendInvitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SendInvitationResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "InvalidUserStatusException",
            "schema": {
              "$ref": "#/definitions/InvalidUserStatusException"
            }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#StartDeviceSync": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Resets a device and its account to the known default settings, by clearing all information and settings set by previous users.",
        "operationId": "StartDeviceSync",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartDeviceSyncRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartDeviceSyncResponse"
            }
          },
          "480": {
            "description": "DeviceNotRegisteredException",
            "schema": {
              "$ref": "#/definitions/DeviceNotRegisteredException"
            }
          }
        }
      }
    },
    "/#StartSmartHomeApplianceDiscovery": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Initiates the discovery of any smart home appliances associated with the room.",
        "operationId": "StartSmartHomeApplianceDiscovery",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartSmartHomeApplianceDiscoveryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartSmartHomeApplianceDiscoveryResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#TagResource": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Adds metadata tags to a specified resource.",
        "operationId": "TagResource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#UntagResource": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Removes metadata tags from a specified resource.",
        "operationId": "UntagResource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UntagResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#UpdateAddressBook": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates address book details by the address book ARN.",
        "operationId": "UpdateAddressBook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAddressBookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAddressBookResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "NameInUseException",
            "schema": {
              "$ref": "#/definitions/NameInUseException"
            }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#UpdateBusinessReportSchedule": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates the configuration of the report delivery schedule with the specified schedule ARN.",
        "operationId": "UpdateBusinessReportSchedule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBusinessReportScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBusinessReportScheduleResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#UpdateConferenceProvider": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates an existing conference provider's settings.",
        "operationId": "UpdateConferenceProvider",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateConferenceProviderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateConferenceProviderResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        }
      }
    },
    "/#UpdateContact": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates the contact details by the contact ARN.",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateContactResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#UpdateDevice": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates the device name by device ARN.",
        "operationId": "UpdateDevice",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDeviceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDeviceResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          },
          "482": {
            "description": "DeviceNotRegisteredException",
            "schema": {
              "$ref": "#/definitions/DeviceNotRegisteredException"
            }
          }
        }
      }
    },
    "/#UpdateProfile": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates an existing room profile by room profile ARN.",
        "operationId": "UpdateProfile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateProfileResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "NameInUseException",
            "schema": {
              "$ref": "#/definitions/NameInUseException"
            }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    },
    "/#UpdateRoom": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates room details by room ARN.",
        "operationId": "UpdateRoom",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRoomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRoomResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "NameInUseException",
            "schema": {
              "$ref": "#/definitions/NameInUseException"
            }
          }
        }
      }
    },
    "/#UpdateSkillGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates skill group details by skill group ARN.",
        "operationId": "UpdateSkillGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSkillGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateSkillGroupResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "NameInUseException",
            "schema": {
              "$ref": "#/definitions/NameInUseException"
            }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "schema": {
              "$ref": "#/definitions/ConcurrentModificationException"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "maxLength": 500,
      "minLength": 1,
      "type": "string"
    },
    "AddressBook": {
      "description": "An address book with attributes.",
      "properties": {
        "AddressBookArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the address book."
        },
        "Description": {
          "$ref": "#/definitions/AddressBookDescription",
          "description": "The description of the address book."
        },
        "Name": {
          "$ref": "#/definitions/AddressBookName",
          "description": "The name of the address book."
        }
      },
      "type": "object"
    },
    "AddressBookData": {
      "description": "Information related to an address book.",
      "properties": {
        "AddressBookArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the address book."
        },
        "Description": {
          "$ref": "#/definitions/AddressBookDescription",
          "description": "The description of the address book."
        },
        "Name": {
          "$ref": "#/definitions/AddressBookName",
          "description": "The name of the address book."
        }
      },
      "type": "object"
    },
    "AddressBookDataList": {
      "items": {
        "$ref": "#/definitions/AddressBookData"
      },
      "type": "array"
    },
    "AddressBookDescription": {
      "maxLength": 200,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "AddressBookName": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "AlreadyExistsException": {},
    "AmazonId": {
      "pattern": "[a-zA-Z0-9]{1,18}",
      "type": "string"
    },
    "ApplianceDescription": {
      "type": "string"
    },
    "ApplianceFriendlyName": {
      "type": "string"
    },
    "ApplianceManufacturerName": {
      "type": "string"
    },
    "ApproveSkillRequest": {
      "properties": {
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The unique identifier of the skill."
        }
      },
      "required": [
        "SkillId"
      ],
      "type": "object"
    },
    "ApproveSkillResponse": {
      "properties": {},
      "type": "object"
    },
    "Arn": {
      "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "type": "string"
    },
    "AssociateContactWithAddressBookRequest": {
      "properties": {
        "AddressBookArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the address book with which to associate the contact."
        },
        "ContactArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the contact to associate with an address book."
        }
      },
      "required": [
        "ContactArn",
        "AddressBookArn"
      ],
      "type": "object"
    },
    "AssociateContactWithAddressBookResponse": {
      "properties": {},
      "type": "object"
    },
    "AssociateDeviceWithRoomRequest": {
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the device to associate to a room. Required."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room with which to associate the device. Required."
        }
      },
      "type": "object"
    },
    "AssociateDeviceWithRoomResponse": {
      "properties": {},
      "type": "object"
    },
    "AssociateSkillGroupWithRoomRequest": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room with which to associate the skill group. Required."
        },
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the skill group to associate with a room. Required."
        }
      },
      "type": "object"
    },
    "AssociateSkillGroupWithRoomResponse": {
      "properties": {},
      "type": "object"
    },
    "AssociateSkillWithSkillGroupRequest": {
      "properties": {
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the skill group to associate the skill to. Required."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The unique identifier of the skill."
        }
      },
      "required": [
        "SkillId"
      ],
      "type": "object"
    },
    "AssociateSkillWithSkillGroupResponse": {
      "properties": {},
      "type": "object"
    },
    "AssociateSkillWithUsersRequest": {
      "properties": {
        "OrganizationArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the organization."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The private skill ID you want to make available to enrolled users.&gt;"
        }
      },
      "required": [
        "SkillId"
      ],
      "type": "object"
    },
    "AssociateSkillWithUsersResponse": {
      "properties": {},
      "type": "object"
    },
    "AuthorizationResult": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/Key"
          },
          "value": {
            "$ref": "#/definitions/Value"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BulletPoint": {
      "type": "string"
    },
    "BulletPoints": {
      "items": {
        "$ref": "#/definitions/BulletPoint"
      },
      "type": "array"
    },
    "BusinessReport": {
      "description": "Usage report with specified parameters.",
      "properties": {
        "DeliveryTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time of report delivery."
        },
        "DownloadUrl": {
          "$ref": "#/definitions/BusinessReportDownloadUrl",
          "description": "The download link where a user can download the report."
        },
        "FailureCode": {
          "$ref": "#/definitions/BusinessReportFailureCode",
          "description": "The failure code."
        },
        "S3Location": {
          "$ref": "#/definitions/BusinessReportS3Location",
          "description": "The S3 location of the output reports."
        },
        "Status": {
          "$ref": "#/definitions/BusinessReportStatus",
          "description": "The status of the report generation execution (RUNNING, SUCCEEDED, or FAILED)."
        }
      },
      "type": "object"
    },
    "BusinessReportContentRange": {
      "description": "The content range of the report.",
      "properties": {
        "Interval": {
          "$ref": "#/definitions/BusinessReportInterval",
          "description": "The interval of the content range."
        }
      },
      "type": "object"
    },
    "BusinessReportDownloadUrl": {
      "type": "string"
    },
    "BusinessReportFailureCode": {
      "enum": [
        "ACCESS_DENIED",
        "NO_SUCH_BUCKET",
        "INTERNAL_FAILURE"
      ],
      "type": "string"
    },
    "BusinessReportFormat": {
      "enum": [
        "CSV",
        "CSV_ZIP"
      ],
      "type": "string"
    },
    "BusinessReportInterval": {
      "enum": [
        "ONE_DAY",
        "ONE_WEEK"
      ],
      "type": "string"
    },
    "BusinessReportRecurrence": {
      "description": "The recurrence of the reports.",
      "properties": {
        "StartDate": {
          "$ref": "#/definitions/Date",
          "description": "The start date."
        }
      },
      "type": "object"
    },
    "BusinessReportS3Location": {
      "description": "The S3 location of the output reports.",
      "properties": {
        "BucketName": {
          "$ref": "#/definitions/CustomerS3BucketName",
          "description": "The S3 bucket name of the output reports."
        },
        "Path": {
          "$ref": "#/definitions/BusinessReportS3Path",
          "description": "The path of the business report."
        }
      },
      "type": "object"
    },
    "BusinessReportS3Path": {
      "type": "string"
    },
    "BusinessReportSchedule": {
      "description": "The schedule of the usage report.",
      "properties": {
        "ContentRange": {
          "$ref": "#/definitions/BusinessReportContentRange",
          "description": "The content range of the reports."
        },
        "Format": {
          "$ref": "#/definitions/BusinessReportFormat",
          "description": "The format of the generated report (individual CSV files or zipped files of individual files)."
        },
        "LastBusinessReport": {
          "$ref": "#/definitions/BusinessReport",
          "description": "The details of the last business report delivery for a specified time interval."
        },
        "Recurrence": {
          "$ref": "#/definitions/BusinessReportRecurrence",
          "description": "The recurrence of the reports."
        },
        "S3BucketName": {
          "$ref": "#/definitions/CustomerS3BucketName",
          "description": "The S3 bucket name of the output reports."
        },
        "S3KeyPrefix": {
          "$ref": "#/definitions/S3KeyPrefix",
          "description": "The S3 key where the report is delivered."
        },
        "ScheduleArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the business report schedule."
        },
        "ScheduleName": {
          "$ref": "#/definitions/BusinessReportScheduleName",
          "description": "The name identifier of the schedule."
        }
      },
      "type": "object"
    },
    "BusinessReportScheduleList": {
      "items": {
        "$ref": "#/definitions/BusinessReportSchedule"
      },
      "type": "array"
    },
    "BusinessReportScheduleName": {
      "maxLength": 64,
      "minLength": 0,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "BusinessReportStatus": {
      "enum": [
        "RUNNING",
        "SUCCEEDED",
        "FAILED"
      ],
      "type": "string"
    },
    "Category": {
      "description": "The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.",
      "properties": {
        "CategoryId": {
          "$ref": "#/definitions/CategoryId",
          "description": "The ID of the skill store category."
        },
        "CategoryName": {
          "$ref": "#/definitions/CategoryName",
          "description": "The name of the skill store category."
        }
      },
      "type": "object"
    },
    "CategoryId": {
      "minimum": 1,
      "type": "integer"
    },
    "CategoryList": {
      "items": {
        "$ref": "#/definitions/Category"
      },
      "type": "array"
    },
    "CategoryName": {
      "type": "string"
    },
    "ClientId": {
      "pattern": "^\\S\\+\\{1,256\\}$",
      "type": "string"
    },
    "ClientRequestToken": {
      "description": "User specified token that is used to support idempotency during Create Resource",
      "maxLength": 150,
      "minLength": 10,
      "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
      "type": "string"
    },
    "CommsProtocol": {
      "enum": [
        "SIP",
        "SIPS",
        "H323"
      ],
      "type": "string"
    },
    "ConcurrentModificationException": {},
    "ConferencePreference": {
      "description": "The default conference provider that is used if no other scheduled meetings are detected.",
      "properties": {
        "DefaultConferenceProviderArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the default conference provider."
        }
      },
      "type": "object"
    },
    "ConferenceProvider": {
      "description": "An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. ",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the newly created conference provider."
        },
        "IPDialIn": {
          "$ref": "#/definitions/IPDialIn",
          "description": "The IP endpoint and protocol for calling."
        },
        "MeetingSetting": {
          "$ref": "#/definitions/MeetingSetting",
          "description": "The meeting settings for the conference provider."
        },
        "Name": {
          "$ref": "#/definitions/ConferenceProviderName",
          "description": "The name of the conference provider."
        },
        "PSTNDialIn": {
          "$ref": "#/definitions/PSTNDialIn",
          "description": "The information for PSTN conferencing."
        },
        "Type": {
          "$ref": "#/definitions/ConferenceProviderType",
          "description": "The type of conference providers."
        }
      },
      "type": "object"
    },
    "ConferenceProviderName": {
      "maxLength": 50,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "ConferenceProviderType": {
      "enum": [
        "CHIME",
        "BLUEJEANS",
        "FUZE",
        "GOOGLE_HANGOUTS",
        "POLYCOM",
        "RINGCENTRAL",
        "SKYPE_FOR_BUSINESS",
        "WEBEX",
        "ZOOM",
        "CUSTOM"
      ],
      "type": "string"
    },
    "ConferenceProvidersList": {
      "items": {
        "$ref": "#/definitions/ConferenceProvider"
      },
      "type": "array"
    },
    "ConnectionStatus": {
      "enum": [
        "ONLINE",
        "OFFLINE"
      ],
      "type": "string"
    },
    "Contact": {
      "description": "A contact with attributes.",
      "properties": {
        "ContactArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the contact."
        },
        "DisplayName": {
          "$ref": "#/definitions/ContactName",
          "description": "The name of the contact to display on the console."
        },
        "FirstName": {
          "$ref": "#/definitions/ContactName",
          "description": "The first name of the contact, used to call the contact on the device."
        },
        "LastName": {
          "$ref": "#/definitions/ContactName",
          "description": "The last name of the contact, used to call the contact on the device."
        },
        "PhoneNumber": {
          "$ref": "#/definitions/E164PhoneNumber",
          "description": "The phone number of the contact."
        }
      },
      "type": "object"
    },
    "ContactData": {
      "description": "Information related to a contact.",
      "properties": {
        "ContactArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the contact."
        },
        "DisplayName": {
          "$ref": "#/definitions/ContactName",
          "description": "The name of the contact to display on the console."
        },
        "FirstName": {
          "$ref": "#/definitions/ContactName",
          "description": "The first name of the contact, used to call the contact on the device."
        },
        "LastName": {
          "$ref": "#/definitions/ContactName",
          "description": "The last name of the contact, used to call the contact on the device."
        },
        "PhoneNumber": {
          "$ref": "#/definitions/E164PhoneNumber",
          "description": "The phone number of the contact."
        }
      },
      "type": "object"
    },
    "ContactDataList": {
      "items": {
        "$ref": "#/definitions/ContactData"
      },
      "type": "array"
    },
    "ContactName": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "CountryCode": {
      "pattern": "\\d{1,3}",
      "type": "string"
    },
    "CreateAddressBookRequest": {
      "properties": {
        "ClientRequestToken": {
          "$ref": "#/definitions/ClientRequestToken",
          "description": "A unique, user-specified identifier for the request that ensures idempotency."
        },
        "Description": {
          "$ref": "#/definitions/AddressBookDescription",
          "description": "The description of the address book."
        },
        "Name": {
          "$ref": "#/definitions/AddressBookName",
          "description": "The name of the address book."
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CreateAddressBookResponse": {
      "properties": {
        "AddressBookArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the newly created address book."
        }
      },
      "type": "object"
    },
    "CreateBusinessReportScheduleRequest": {
      "properties": {
        "ClientRequestToken": {
          "$ref": "#/definitions/ClientRequestToken",
          "description": "The client request token."
        },
        "ContentRange": {
          "$ref": "#/definitions/BusinessReportContentRange",
          "description": "The content range of the reports."
        },
        "Format": {
          "$ref": "#/definitions/BusinessReportFormat",
          "description": "The format of the generated report (individual CSV files or zipped files of individual files)."
        },
        "Recurrence": {
          "$ref": "#/definitions/BusinessReportRecurrence",
          "description": "The recurrence of the reports."
        },
        "S3BucketName": {
          "$ref": "#/definitions/CustomerS3BucketName",
          "description": "The S3 bucket name of the output reports."
        },
        "S3KeyPrefix": {
          "$ref": "#/definitions/S3KeyPrefix",
          "description": "The S3 key where the report is delivered."
        },
        "ScheduleName": {
          "$ref": "#/definitions/BusinessReportScheduleName",
          "description": "The name identifier of the schedule."
        }
      },
      "required": [
        "Format",
        "ContentRange"
      ],
      "type": "object"
    },
    "CreateBusinessReportScheduleResponse": {
      "properties": {
        "ScheduleArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the business report schedule."
        }
      },
      "type": "object"
    },
    "CreateConferenceProviderRequest": {
      "properties": {
        "ClientRequestToken": {
          "$ref": "#/definitions/ClientRequestToken",
          "description": "The request token of the client."
        },
        "ConferenceProviderName": {
          "$ref": "#/definitions/ConferenceProviderName",
          "description": "The name of the conference provider."
        },
        "ConferenceProviderType": {
          "$ref": "#/definitions/ConferenceProviderType",
          "description": "Represents a type within a list of predefined types."
        },
        "IPDialIn": {
          "$ref": "#/definitions/IPDialIn",
          "description": "The IP endpoint and protocol for calling."
        },
        "MeetingSetting": {
          "$ref": "#/definitions/MeetingSetting",
          "description": "The meeting settings for the conference provider."
        },
        "PSTNDialIn": {
          "$ref": "#/definitions/PSTNDialIn",
          "description": "The information for PSTN conferencing."
        }
      },
      "required": [
        "ConferenceProviderName",
        "ConferenceProviderType",
        "MeetingSetting"
      ],
      "type": "object"
    },
    "CreateConferenceProviderResponse": {
      "properties": {
        "ConferenceProviderArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the newly-created conference provider."
        }
      },
      "type": "object"
    },
    "CreateContactRequest": {
      "properties": {
        "ClientRequestToken": {
          "$ref": "#/definitions/ClientRequestToken",
          "description": "A unique, user-specified identifier for this request that ensures idempotency."
        },
        "DisplayName": {
          "$ref": "#/definitions/ContactName",
          "description": "The name of the contact to display on the console."
        },
        "FirstName": {
          "$ref": "#/definitions/ContactName",
          "description": "The first name of the contact that is used to call the contact on the device."
        },
        "LastName": {
          "$ref": "#/definitions/ContactName",
          "description": "The last name of the contact that is used to call the contact on the device."
        },
        "PhoneNumber": {
          "$ref": "#/definitions/E164PhoneNumber",
          "description": "The phone number of the contact in E.164 format."
        }
      },
      "required": [
        "FirstName"
      ],
      "type": "object"
    },
    "CreateContactResponse": {
      "properties": {
        "ContactArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the newly created address book."
        }
      },
      "type": "object"
    },
    "CreateProfileRequest": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/Address",
          "description": "The valid address for the room."
        },
        "ClientRequestToken": {
          "$ref": "#/definitions/ClientRequestToken",
          "description": "The user-specified token that is used during the creation of a profile."
        },
        "DistanceUnit": {
          "$ref": "#/definitions/DistanceUnit",
          "description": "The distance unit to be used by devices in the profile."
        },
        "MaxVolumeLimit": {
          "$ref": "#/definitions/MaxVolumeLimit",
          "description": "The maximum volume limit for a room profile."
        },
        "PSTNEnabled": {
          "$ref": "#/definitions/Boolean",
          "description": "Whether PSTN calling is enabled."
        },
        "ProfileName": {
          "$ref": "#/definitions/ProfileName",
          "description": "The name of a room profile."
        },
        "SetupModeDisabled": {
          "$ref": "#/definitions/Boolean",
          "description": "Whether room profile setup is enabled."
        },
        "TemperatureUnit": {
          "$ref": "#/definitions/TemperatureUnit",
          "description": "The temperature unit to be used by devices in the profile."
        },
        "Timezone": {
          "$ref": "#/definitions/Timezone",
          "description": "The time zone used by a room profile."
        },
        "WakeWord": {
          "$ref": "#/definitions/WakeWord",
          "description": "A wake word for Alexa, Echo, Amazon, or a computer."
        }
      },
      "required": [
        "ProfileName",
        "Timezone",
        "Address",
        "DistanceUnit",
        "TemperatureUnit",
        "WakeWord"
      ],
      "type": "object"
    },
    "CreateProfileResponse": {
      "properties": {
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the newly created room profile in the response."
        }
      },
      "type": "object"
    },
    "CreateRoomRequest": {
      "properties": {
        "ClientRequestToken": {
          "$ref": "#/definitions/ClientRequestToken",
          "description": "A unique, user-specified identifier for this request that ensures idempotency. "
        },
        "Description": {
          "$ref": "#/definitions/RoomDescription",
          "description": "The description for the room."
        },
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The profile ARN for the room."
        },
        "ProviderCalendarId": {
          "$ref": "#/definitions/ProviderCalendarId",
          "description": "The calendar ARN for the room."
        },
        "RoomName": {
          "$ref": "#/definitions/RoomName",
          "description": "The name for the room."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags for the room."
        }
      },
      "required": [
        "RoomName"
      ],
      "type": "object"
    },
    "CreateRoomResponse": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the newly created room in the response."
        }
      },
      "type": "object"
    },
    "CreateSkillGroupRequest": {
      "properties": {
        "ClientRequestToken": {
          "$ref": "#/definitions/ClientRequestToken",
          "description": "A unique, user-specified identifier for this request that ensures idempotency. "
        },
        "Description": {
          "$ref": "#/definitions/SkillGroupDescription",
          "description": "The description for the skill group."
        },
        "SkillGroupName": {
          "$ref": "#/definitions/SkillGroupName",
          "description": "The name for the skill group."
        }
      },
      "required": [
        "SkillGroupName"
      ],
      "type": "object"
    },
    "CreateSkillGroupResponse": {
      "properties": {
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the newly created skill group in the response."
        }
      },
      "type": "object"
    },
    "CreateUserRequest": {
      "properties": {
        "ClientRequestToken": {
          "$ref": "#/definitions/ClientRequestToken",
          "description": "A unique, user-specified identifier for this request that ensures idempotency. "
        },
        "Email": {
          "$ref": "#/definitions/Email",
          "description": "The email address for the user."
        },
        "FirstName": {
          "$ref": "#/definitions/user_FirstName",
          "description": "The first name for the user."
        },
        "LastName": {
          "$ref": "#/definitions/user_LastName",
          "description": "The last name for the user."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags for the user."
        },
        "UserId": {
          "$ref": "#/definitions/user_UserId",
          "description": "The ARN for the user."
        }
      },
      "required": [
        "UserId"
      ],
      "type": "object"
    },
    "CreateUserResponse": {
      "properties": {
        "UserArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the newly created user in the response."
        }
      },
      "type": "object"
    },
    "CustomerS3BucketName": {
      "pattern": "[a-z0-9-\\.]{3,63}",
      "type": "string"
    },
    "Date": {
      "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
      "type": "string"
    },
    "DeleteAddressBookRequest": {
      "properties": {
        "AddressBookArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the address book to delete."
        }
      },
      "required": [
        "AddressBookArn"
      ],
      "type": "object"
    },
    "DeleteAddressBookResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteBusinessReportScheduleRequest": {
      "properties": {
        "ScheduleArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the business report schedule."
        }
      },
      "required": [
        "ScheduleArn"
      ],
      "type": "object"
    },
    "DeleteBusinessReportScheduleResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteConferenceProviderRequest": {
      "properties": {
        "ConferenceProviderArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the conference provider."
        }
      },
      "required": [
        "ConferenceProviderArn"
      ],
      "type": "object"
    },
    "DeleteConferenceProviderResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteContactRequest": {
      "properties": {
        "ContactArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the contact to delete."
        }
      },
      "required": [
        "ContactArn"
      ],
      "type": "object"
    },
    "DeleteContactResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteDeviceRequest": {
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the device for which to request details."
        }
      },
      "required": [
        "DeviceArn"
      ],
      "type": "object"
    },
    "DeleteDeviceResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteProfileRequest": {
      "properties": {
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room profile to delete. Required."
        }
      },
      "type": "object"
    },
    "DeleteProfileResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteRoomRequest": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room to delete. Required."
        }
      },
      "type": "object"
    },
    "DeleteRoomResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteRoomSkillParameterRequest": {
      "properties": {
        "ParameterKey": {
          "$ref": "#/definitions/RoomSkillParameterKey",
          "description": "The room skill parameter key for which to remove details."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room from which to remove the room skill parameter details."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The ID of the skill from which to remove the room skill parameter details."
        }
      },
      "required": [
        "SkillId",
        "ParameterKey"
      ],
      "type": "object"
    },
    "DeleteRoomSkillParameterResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteSkillAuthorizationRequest": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The room that the skill is authorized for."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The unique identifier of a skill."
        }
      },
      "required": [
        "SkillId"
      ],
      "type": "object"
    },
    "DeleteSkillAuthorizationResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteSkillGroupRequest": {
      "properties": {
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the skill group to delete. Required."
        }
      },
      "type": "object"
    },
    "DeleteSkillGroupResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteUserRequest": {
      "properties": {
        "EnrollmentId": {
          "$ref": "#/definitions/EnrollmentId",
          "description": "The ARN of the user's enrollment in the organization. Required."
        },
        "UserArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the user to delete in the organization. Required."
        }
      },
      "required": [
        "EnrollmentId"
      ],
      "type": "object"
    },
    "DeleteUserResponse": {
      "properties": {},
      "type": "object"
    },
    "DeveloperInfo": {
      "description": "The details about the developer that published the skill.",
      "properties": {
        "DeveloperName": {
          "$ref": "#/definitions/DeveloperName",
          "description": "The name of the developer."
        },
        "Email": {
          "$ref": "#/definitions/Email",
          "description": "The email of the developer."
        },
        "PrivacyPolicy": {
          "$ref": "#/definitions/PrivacyPolicy",
          "description": "The URL of the privacy policy."
        },
        "Url": {
          "$ref": "#/definitions/Url",
          "description": "The website of the developer."
        }
      },
      "type": "object"
    },
    "DeveloperName": {
      "type": "string"
    },
    "Device": {
      "description": "A device with attributes.",
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of a device."
        },
        "DeviceName": {
          "$ref": "#/definitions/DeviceName",
          "description": "The name of a device."
        },
        "DeviceSerialNumber": {
          "$ref": "#/definitions/DeviceSerialNumber",
          "description": "The serial number of a device."
        },
        "DeviceStatus": {
          "$ref": "#/definitions/DeviceStatus",
          "description": "The status of a device. If the status is not READY, check the DeviceStatusInfo value for details."
        },
        "DeviceStatusInfo": {
          "$ref": "#/definitions/DeviceStatusInfo",
          "description": "Detailed information about a device's status."
        },
        "DeviceType": {
          "$ref": "#/definitions/DeviceType",
          "description": "The type of a device."
        },
        "MacAddress": {
          "$ref": "#/definitions/MacAddress",
          "description": "The MAC address of a device."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The room ARN of a device."
        },
        "SoftwareVersion": {
          "$ref": "#/definitions/SoftwareVersion",
          "description": "The software version of a device."
        }
      },
      "type": "object"
    },
    "DeviceData": {
      "description": "Device attributes.",
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of a device."
        },
        "DeviceName": {
          "$ref": "#/definitions/DeviceName",
          "description": "The name of a device."
        },
        "DeviceSerialNumber": {
          "$ref": "#/definitions/DeviceSerialNumber",
          "description": "The serial number of a device."
        },
        "DeviceStatus": {
          "$ref": "#/definitions/DeviceStatus",
          "description": "The status of a device."
        },
        "DeviceStatusInfo": {
          "$ref": "#/definitions/DeviceStatusInfo",
          "description": "Detailed information about a device's status."
        },
        "DeviceType": {
          "$ref": "#/definitions/DeviceType",
          "description": "The type of a device."
        },
        "MacAddress": {
          "$ref": "#/definitions/MacAddress",
          "description": "The MAC address of a device."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The room ARN associated with a device."
        },
        "RoomName": {
          "$ref": "#/definitions/RoomName",
          "description": "The name of the room associated with a device."
        },
        "SoftwareVersion": {
          "$ref": "#/definitions/SoftwareVersion",
          "description": "The software version of a device."
        }
      },
      "type": "object"
    },
    "DeviceDataList": {
      "items": {
        "$ref": "#/definitions/DeviceData"
      },
      "type": "array"
    },
    "DeviceEvent": {
      "description": "The list of device events.",
      "properties": {
        "Timestamp": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time (in epoch) when the event occurred. "
        },
        "Type": {
          "$ref": "#/definitions/DeviceEventType",
          "description": "The type of device event."
        },
        "Value": {
          "$ref": "#/definitions/DeviceEventValue",
          "description": "The value of the event."
        }
      },
      "type": "object"
    },
    "DeviceEventList": {
      "items": {
        "$ref": "#/definitions/DeviceEvent"
      },
      "type": "array"
    },
    "DeviceEventType": {
      "enum": [
        "CONNECTION_STATUS",
        "DEVICE_STATUS"
      ],
      "type": "string"
    },
    "DeviceEventValue": {
      "type": "string"
    },
    "DeviceName": {
      "maxLength": 100,
      "minLength": 2,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "DeviceNotRegisteredException": {},
    "DeviceSerialNumber": {
      "pattern": "[a-zA-Z0-9]{1,200}",
      "type": "string"
    },
    "DeviceSerialNumberForAVS": {
      "pattern": "^[a-zA-Z0-9]{1,50}$",
      "type": "string"
    },
    "DeviceStatus": {
      "enum": [
        "READY",
        "PENDING",
        "WAS_OFFLINE",
        "DEREGISTERED"
      ],
      "type": "string"
    },
    "DeviceStatusDetail": {
      "description": "Details of a device’s status.",
      "properties": {
        "Code": {
          "$ref": "#/definitions/DeviceStatusDetailCode",
          "description": "The device status detail code."
        }
      },
      "type": "object"
    },
    "DeviceStatusDetailCode": {
      "enum": [
        "DEVICE_SOFTWARE_UPDATE_NEEDED",
        "DEVICE_WAS_OFFLINE"
      ],
      "type": "string"
    },
    "DeviceStatusDetails": {
      "items": {
        "$ref": "#/definitions/DeviceStatusDetail"
      },
      "type": "array"
    },
    "DeviceStatusInfo": {
      "description": "Detailed information about a device's status.",
      "properties": {
        "ConnectionStatus": {
          "$ref": "#/definitions/ConnectionStatus",
          "description": "The latest available information about the connection status of a device. "
        },
        "DeviceStatusDetails": {
          "$ref": "#/definitions/DeviceStatusDetails",
          "description": "One or more device status detail descriptions."
        }
      },
      "type": "object"
    },
    "DeviceType": {
      "pattern": "[a-zA-Z0-9]{1,200}",
      "type": "string"
    },
    "DisassociateContactFromAddressBookRequest": {
      "properties": {
        "AddressBookArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the address from which to disassociate the contact."
        },
        "ContactArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the contact to disassociate from an address book."
        }
      },
      "required": [
        "ContactArn",
        "AddressBookArn"
      ],
      "type": "object"
    },
    "DisassociateContactFromAddressBookResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociateDeviceFromRoomRequest": {
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the device to disassociate from a room. Required."
        }
      },
      "type": "object"
    },
    "DisassociateDeviceFromRoomResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociateSkillFromSkillGroupRequest": {
      "properties": {
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The unique identifier of a skill. Required."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The ARN of a skill group to associate to a skill."
        }
      },
      "required": [
        "SkillId"
      ],
      "type": "object"
    },
    "DisassociateSkillFromSkillGroupResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociateSkillFromUsersRequest": {
      "properties": {
        "OrganizationArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the organization."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": " The private skill ID you want to make unavailable for enrolled users."
        }
      },
      "required": [
        "SkillId"
      ],
      "type": "object"
    },
    "DisassociateSkillFromUsersResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociateSkillGroupFromRoomRequest": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room from which the skill group is to be disassociated. Required."
        },
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the skill group to disassociate from a room. Required."
        }
      },
      "type": "object"
    },
    "DisassociateSkillGroupFromRoomResponse": {
      "properties": {},
      "type": "object"
    },
    "DistanceUnit": {
      "enum": [
        "METRIC",
        "IMPERIAL"
      ],
      "type": "string"
    },
    "E164PhoneNumber": {
      "format": "password",
      "pattern": "^\\+\\d{8,}$",
      "type": "string"
    },
    "Email": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
      "type": "string"
    },
    "EnablementType": {
      "enum": [
        "ENABLED",
        "PENDING"
      ],
      "type": "string"
    },
    "EnablementTypeFilter": {
      "enum": [
        "ENABLED",
        "PENDING"
      ],
      "type": "string"
    },
    "EndUserLicenseAgreement": {
      "type": "string"
    },
    "Endpoint": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "EnrollmentId": {
      "maxLength": 128,
      "minLength": 0,
      "type": "string"
    },
    "EnrollmentStatus": {
      "enum": [
        "INITIALIZED",
        "PENDING",
        "REGISTERED",
        "DISASSOCIATING",
        "DEREGISTERING"
      ],
      "type": "string"
    },
    "Feature": {
      "enum": [
        "BLUETOOTH",
        "VOLUME",
        "NOTIFICATIONS",
        "LISTS",
        "SKILLS",
        "ALL"
      ],
      "type": "string"
    },
    "Features": {
      "items": {
        "$ref": "#/definitions/Feature"
      },
      "type": "array"
    },
    "Filter": {
      "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
      "properties": {
        "Key": {
          "$ref": "#/definitions/FilterKey",
          "description": "The key of a filter."
        },
        "Values": {
          "$ref": "#/definitions/FilterValueList",
          "description": "The values of a filter."
        }
      },
      "required": [
        "Key",
        "Values"
      ],
      "type": "object"
    },
    "FilterKey": {
      "maxLength": 500,
      "minLength": 1,
      "type": "string"
    },
    "FilterList": {
      "items": {
        "$ref": "#/definitions/Filter"
      },
      "maxItems": 25,
      "type": "array"
    },
    "FilterValue": {
      "maxLength": 500,
      "minLength": 1,
      "type": "string"
    },
    "FilterValueList": {
      "items": {
        "$ref": "#/definitions/FilterValue"
      },
      "maxItems": 5,
      "type": "array"
    },
    "ForgetSmartHomeAppliancesRequest": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The room that the appliances are associated with."
        }
      },
      "required": [
        "RoomArn"
      ],
      "type": "object"
    },
    "ForgetSmartHomeAppliancesResponse": {
      "properties": {},
      "type": "object"
    },
    "GenericKeyword": {
      "type": "string"
    },
    "GenericKeywords": {
      "items": {
        "$ref": "#/definitions/GenericKeyword"
      },
      "type": "array"
    },
    "GetAddressBookRequest": {
      "properties": {
        "AddressBookArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the address book for which to request details."
        }
      },
      "required": [
        "AddressBookArn"
      ],
      "type": "object"
    },
    "GetAddressBookResponse": {
      "properties": {
        "AddressBook": {
          "$ref": "#/definitions/AddressBook",
          "description": "The details of the requested address book."
        }
      },
      "type": "object"
    },
    "GetConferencePreferenceRequest": {
      "properties": {},
      "type": "object"
    },
    "GetConferencePreferenceResponse": {
      "properties": {
        "Preference": {
          "$ref": "#/definitions/ConferencePreference",
          "description": "The conference preference."
        }
      },
      "type": "object"
    },
    "GetConferenceProviderRequest": {
      "properties": {
        "ConferenceProviderArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the newly created conference provider."
        }
      },
      "required": [
        "ConferenceProviderArn"
      ],
      "type": "object"
    },
    "GetConferenceProviderResponse": {
      "properties": {
        "ConferenceProvider": {
          "$ref": "#/definitions/ConferenceProvider",
          "description": "The conference provider."
        }
      },
      "type": "object"
    },
    "GetContactRequest": {
      "properties": {
        "ContactArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the contact for which to request details."
        }
      },
      "required": [
        "ContactArn"
      ],
      "type": "object"
    },
    "GetContactResponse": {
      "properties": {
        "Contact": {
          "$ref": "#/definitions/Contact",
          "description": "The details of the requested contact."
        }
      },
      "type": "object"
    },
    "GetDeviceRequest": {
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the device for which to request details. Required."
        }
      },
      "type": "object"
    },
    "GetDeviceResponse": {
      "properties": {
        "Device": {
          "$ref": "#/definitions/Device",
          "description": "The details of the device requested. Required."
        }
      },
      "type": "object"
    },
    "GetProfileRequest": {
      "properties": {
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room profile for which to request details. Required."
        }
      },
      "type": "object"
    },
    "GetProfileResponse": {
      "properties": {
        "Profile": {
          "$ref": "#/definitions/Profile",
          "description": "The details of the room profile requested. Required."
        }
      },
      "type": "object"
    },
    "GetRoomRequest": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room for which to request details. Required."
        }
      },
      "type": "object"
    },
    "GetRoomResponse": {
      "properties": {
        "Room": {
          "$ref": "#/definitions/Room",
          "description": "The details of the room requested."
        }
      },
      "type": "object"
    },
    "GetRoomSkillParameterRequest": {
      "properties": {
        "ParameterKey": {
          "$ref": "#/definitions/RoomSkillParameterKey",
          "description": "The room skill parameter key for which to get details. Required."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room from which to get the room skill parameter details. "
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The ARN of the skill from which to get the room skill parameter details. Required."
        }
      },
      "required": [
        "SkillId",
        "ParameterKey"
      ],
      "type": "object"
    },
    "GetRoomSkillParameterResponse": {
      "properties": {
        "RoomSkillParameter": {
          "$ref": "#/definitions/RoomSkillParameter",
          "description": "The details of the room skill parameter requested. Required."
        }
      },
      "type": "object"
    },
    "GetSkillGroupRequest": {
      "properties": {
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the skill group for which to get details. Required."
        }
      },
      "type": "object"
    },
    "GetSkillGroupResponse": {
      "properties": {
        "SkillGroup": {
          "$ref": "#/definitions/SkillGroup",
          "description": "The details of the skill group requested. Required."
        }
      },
      "type": "object"
    },
    "IPDialIn": {
      "description": "The IP endpoint and protocol for calling.",
      "properties": {
        "CommsProtocol": {
          "$ref": "#/definitions/CommsProtocol",
          "description": "The protocol, including SIP, SIPS, and H323."
        },
        "Endpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "The IP address."
        }
      },
      "required": [
        "Endpoint",
        "CommsProtocol"
      ],
      "type": "object"
    },
    "IconUrl": {
      "type": "string"
    },
    "InvalidCertificateAuthorityException": {},
    "InvalidDeviceException": {},
    "InvalidUserStatusException": {},
    "InvocationPhrase": {
      "type": "string"
    },
    "Key": {
      "minLength": 1,
      "type": "string"
    },
    "LimitExceededException": {},
    "ListBusinessReportSchedulesRequest": {
      "properties": {
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of schedules listed in the call."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token used to list the remaining schedules from the previous API call."
        }
      },
      "type": "object"
    },
    "ListBusinessReportSchedulesResponse": {
      "properties": {
        "BusinessReportSchedules": {
          "$ref": "#/definitions/BusinessReportScheduleList",
          "description": "The schedule of the reports."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token used to list the remaining schedules from the previous API call."
        }
      },
      "type": "object"
    },
    "ListConferenceProvidersRequest": {
      "properties": {
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of conference providers to be returned, per paginated calls."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The tokens used for pagination."
        }
      },
      "type": "object"
    },
    "ListConferenceProvidersResponse": {
      "properties": {
        "ConferenceProviders": {
          "$ref": "#/definitions/ConferenceProvidersList",
          "description": "The conference providers."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The tokens used for pagination."
        }
      },
      "type": "object"
    },
    "ListDeviceEventsRequest": {
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of a device."
        },
        "EventType": {
          "$ref": "#/definitions/DeviceEventType",
          "description": "The event type to filter device events. If EventType isn't specified, this returns a list of all device events in reverse chronological order. If EventType is specified, this returns a list of device events for that EventType in reverse chronological order. "
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of results to include in the response. The default value is 50. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved. "
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults. When the end of results is reached, the response has a value of null."
        }
      },
      "required": [
        "DeviceArn"
      ],
      "type": "object"
    },
    "ListDeviceEventsResponse": {
      "properties": {
        "DeviceEvents": {
          "$ref": "#/definitions/DeviceEventList",
          "description": "The device events requested for the device ARN."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        }
      },
      "type": "object"
    },
    "ListSkillsRequest": {
      "properties": {
        "EnablementType": {
          "$ref": "#/definitions/EnablementTypeFilter",
          "description": "Whether the skill is enabled under the user's account, or if it requires linking to be used."
        },
        "MaxResults": {
          "$ref": "#/definitions/SkillListMaxResults",
          "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>."
        },
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the skill group for which to list enabled skills."
        },
        "SkillType": {
          "$ref": "#/definitions/SkillTypeFilter",
          "description": "Whether the skill is publicly available or is a private skill."
        }
      },
      "type": "object"
    },
    "ListSkillsResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        },
        "SkillSummaries": {
          "$ref": "#/definitions/SkillSummaryList",
          "description": "The list of enabled skills requested. Required."
        }
      },
      "type": "object"
    },
    "ListSkillsStoreCategoriesRequest": {
      "properties": {
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of categories returned, per paginated calls."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The tokens used for pagination."
        }
      },
      "type": "object"
    },
    "ListSkillsStoreCategoriesResponse": {
      "properties": {
        "CategoryList": {
          "$ref": "#/definitions/CategoryList",
          "description": "The list of categories."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The tokens used for pagination."
        }
      },
      "type": "object"
    },
    "ListSkillsStoreSkillsByCategoryRequest": {
      "properties": {
        "CategoryId": {
          "$ref": "#/definitions/CategoryId",
          "description": "The category ID for which the skills are being retrieved from the skill store."
        },
        "MaxResults": {
          "$ref": "#/definitions/SkillListMaxResults",
          "description": "The maximum number of skills returned per paginated calls."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The tokens used for pagination."
        }
      },
      "required": [
        "CategoryId"
      ],
      "type": "object"
    },
    "ListSkillsStoreSkillsByCategoryResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The tokens used for pagination."
        },
        "SkillsStoreSkills": {
          "$ref": "#/definitions/SkillsStoreSkillList",
          "description": "The skill store skills."
        }
      },
      "type": "object"
    },
    "ListSmartHomeAppliancesRequest": {
      "properties": {
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of appliances to be returned, per paginated calls."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The tokens used for pagination."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The room that the appliances are associated with."
        }
      },
      "required": [
        "RoomArn"
      ],
      "type": "object"
    },
    "ListSmartHomeAppliancesResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The tokens used for pagination."
        },
        "SmartHomeAppliances": {
          "$ref": "#/definitions/SmartHomeApplianceList",
          "description": "The smart home appliances."
        }
      },
      "type": "object"
    },
    "ListTagsRequest": {
      "properties": {
        "Arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the specified resource for which to list tags."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. "
        }
      },
      "required": [
        "Arn"
      ],
      "type": "object"
    },
    "ListTagsResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags requested for the specified resource."
        }
      },
      "type": "object"
    },
    "MacAddress": {
      "type": "string"
    },
    "MaxResults": {
      "maximum": 50,
      "minimum": 1,
      "type": "integer"
    },
    "MaxVolumeLimit": {
      "type": "integer"
    },
    "MeetingSetting": {
      "description": "<p>The values that indicate whether a pin is always required (YES), never required (NO), or OPTIONAL.</p> <ul> <li> <p>If YES, Alexa will always ask for a meeting pin.</p> </li> <li> <p>If NO, Alexa will never ask for a meeting pin.</p> </li> <li> <p>If OPTIONAL, Alexa will ask if you have a meeting pin and if the customer responds with yes, it will ask for the meeting pin.</p> </li> </ul>",
      "properties": {
        "RequirePin": {
          "$ref": "#/definitions/RequirePin",
          "description": "The values that indicate whether the pin is always required."
        }
      },
      "required": [
        "RequirePin"
      ],
      "type": "object"
    },
    "NameInUseException": {},
    "NewInThisVersionBulletPoints": {
      "items": {
        "$ref": "#/definitions/BulletPoint"
      },
      "type": "array"
    },
    "NextToken": {
      "maxLength": 1000,
      "minLength": 1,
      "type": "string"
    },
    "NotFoundException": {},
    "OneClickIdDelay": {
      "maxLength": 2,
      "minLength": 1,
      "type": "string"
    },
    "OneClickPinDelay": {
      "maxLength": 2,
      "minLength": 1,
      "type": "string"
    },
    "OutboundPhoneNumber": {
      "pattern": "\\d{10}",
      "type": "string"
    },
    "PSTNDialIn": {
      "description": "The information for public switched telephone network (PSTN) conferencing.",
      "properties": {
        "CountryCode": {
          "$ref": "#/definitions/CountryCode",
          "description": "The zip code."
        },
        "OneClickIdDelay": {
          "$ref": "#/definitions/OneClickIdDelay",
          "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network."
        },
        "OneClickPinDelay": {
          "$ref": "#/definitions/OneClickPinDelay",
          "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network."
        },
        "PhoneNumber": {
          "$ref": "#/definitions/OutboundPhoneNumber",
          "description": "The phone number to call to join the conference."
        }
      },
      "required": [
        "CountryCode",
        "PhoneNumber",
        "OneClickIdDelay",
        "OneClickPinDelay"
      ],
      "type": "object"
    },
    "PrivacyPolicy": {
      "type": "string"
    },
    "ProductDescription": {
      "type": "string"
    },
    "ProductId": {
      "pattern": "^[a-zA-Z0-9_]{1,256}$",
      "type": "string"
    },
    "Profile": {
      "description": "A room profile with attributes.",
      "properties": {
        "Address": {
          "$ref": "#/definitions/Address",
          "description": "The address of a room profile."
        },
        "AddressBookArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the address book."
        },
        "DistanceUnit": {
          "$ref": "#/definitions/DistanceUnit",
          "description": "The distance unit of a room profile."
        },
        "IsDefault": {
          "$ref": "#/definitions/Boolean",
          "description": "Retrieves if the profile is default or not."
        },
        "MaxVolumeLimit": {
          "$ref": "#/definitions/MaxVolumeLimit",
          "description": "The max volume limit of a room profile."
        },
        "PSTNEnabled": {
          "$ref": "#/definitions/Boolean",
          "description": "The PSTN setting of a room profile."
        },
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of a room profile."
        },
        "ProfileName": {
          "$ref": "#/definitions/ProfileName",
          "description": "The name of a room profile."
        },
        "SetupModeDisabled": {
          "$ref": "#/definitions/Boolean",
          "description": "The setup mode of a room profile."
        },
        "TemperatureUnit": {
          "$ref": "#/definitions/TemperatureUnit",
          "description": "The temperature unit of a room profile."
        },
        "Timezone": {
          "$ref": "#/definitions/Timezone",
          "description": "The time zone of a room profile."
        },
        "WakeWord": {
          "$ref": "#/definitions/WakeWord",
          "description": "The wake word of a room profile."
        }
      },
      "type": "object"
    },
    "ProfileData": {
      "description": "The data of a room profile.",
      "properties": {
        "Address": {
          "$ref": "#/definitions/Address",
          "description": "The address of a room profile."
        },
        "DistanceUnit": {
          "$ref": "#/definitions/DistanceUnit",
          "description": "The distance unit of a room profile."
        },
        "IsDefault": {
          "$ref": "#/definitions/Boolean",
          "description": "Retrieves if the profile data is default or not."
        },
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of a room profile."
        },
        "ProfileName": {
          "$ref": "#/definitions/ProfileName",
          "description": "The name of a room profile."
        },
        "TemperatureUnit": {
          "$ref": "#/definitions/TemperatureUnit",
          "description": "The temperature unit of a room profile."
        },
        "Timezone": {
          "$ref": "#/definitions/Timezone",
          "description": "The timezone of a room profile."
        },
        "WakeWord": {
          "$ref": "#/definitions/WakeWord",
          "description": "The wake word of a room profile."
        }
      },
      "type": "object"
    },
    "ProfileDataList": {
      "items": {
        "$ref": "#/definitions/ProfileData"
      },
      "type": "array"
    },
    "ProfileName": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "ProviderCalendarId": {
      "maxLength": 100,
      "minLength": 0,
      "type": "string"
    },
    "PutConferencePreferenceRequest": {
      "properties": {
        "ConferencePreference": {
          "$ref": "#/definitions/ConferencePreference",
          "description": "The conference preference of a specific conference provider."
        }
      },
      "required": [
        "ConferencePreference"
      ],
      "type": "object"
    },
    "PutConferencePreferenceResponse": {
      "properties": {},
      "type": "object"
    },
    "PutRoomSkillParameterRequest": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room associated with the room skill parameter. Required."
        },
        "RoomSkillParameter": {
          "$ref": "#/definitions/RoomSkillParameter",
          "description": "The updated room skill parameter. Required."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The ARN of the skill associated with the room skill parameter. Required."
        }
      },
      "required": [
        "SkillId",
        "RoomSkillParameter"
      ],
      "type": "object"
    },
    "PutRoomSkillParameterResponse": {
      "properties": {},
      "type": "object"
    },
    "PutSkillAuthorizationRequest": {
      "properties": {
        "AuthorizationResult": {
          "$ref": "#/definitions/AuthorizationResult",
          "description": "The authorization result specific to OAUTH code grant output. \"Code” must be populated in the AuthorizationResult map to establish the authorization."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The room that the skill is authorized for."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The unique identifier of a skill."
        }
      },
      "required": [
        "AuthorizationResult",
        "SkillId"
      ],
      "type": "object"
    },
    "PutSkillAuthorizationResponse": {
      "properties": {},
      "type": "object"
    },
    "RegisterAVSDeviceRequest": {
      "properties": {
        "AmazonId": {
          "$ref": "#/definitions/AmazonId",
          "description": "The device type ID for your AVS device generated by Amazon when the OEM creates a new product on Amazon's Developer Console."
        },
        "ClientId": {
          "$ref": "#/definitions/ClientId",
          "description": "The client ID of the OEM used for code-based linking authorization on an AVS device."
        },
        "DeviceSerialNumber": {
          "$ref": "#/definitions/DeviceSerialNumberForAVS",
          "description": "The key generated by the OEM that uniquely identifies a specified instance of your AVS device."
        },
        "ProductId": {
          "$ref": "#/definitions/ProductId",
          "description": "The product ID used to identify your AVS device during authorization."
        },
        "UserCode": {
          "$ref": "#/definitions/UserCode",
          "description": "The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification."
        }
      },
      "required": [
        "ClientId",
        "UserCode",
        "ProductId",
        "DeviceSerialNumber",
        "AmazonId"
      ],
      "type": "object"
    },
    "RegisterAVSDeviceResponse": {
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the device."
        }
      },
      "type": "object"
    },
    "RejectSkillRequest": {
      "properties": {
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The unique identifier of the skill."
        }
      },
      "required": [
        "SkillId"
      ],
      "type": "object"
    },
    "RejectSkillResponse": {
      "properties": {},
      "type": "object"
    },
    "ReleaseDate": {
      "type": "string"
    },
    "RequirePin": {
      "enum": [
        "YES",
        "NO",
        "OPTIONAL"
      ],
      "type": "string"
    },
    "ResolveRoomRequest": {
      "properties": {
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The ARN of the skill that was requested. Required."
        },
        "UserId": {
          "$ref": "#/definitions/UserId",
          "description": "The ARN of the user. Required."
        }
      },
      "required": [
        "UserId",
        "SkillId"
      ],
      "type": "object"
    },
    "ResolveRoomResponse": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room from which the skill request was invoked."
        },
        "RoomName": {
          "$ref": "#/definitions/RoomName",
          "description": "The name of the room from which the skill request was invoked."
        },
        "RoomSkillParameters": {
          "$ref": "#/definitions/RoomSkillParameters",
          "description": "Response to get the room profile request. Required."
        }
      },
      "type": "object"
    },
    "ResourceInUseException": {},
    "ReviewKey": {
      "type": "string"
    },
    "ReviewValue": {
      "type": "string"
    },
    "Reviews": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/ReviewKey"
          },
          "value": {
            "$ref": "#/definitions/ReviewValue"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "RevokeInvitationRequest": {
      "properties": {
        "EnrollmentId": {
          "$ref": "#/definitions/EnrollmentId",
          "description": "The ARN of the enrollment invitation to revoke. Required."
        },
        "UserArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the user for whom to revoke an enrollment invitation. Required."
        }
      },
      "type": "object"
    },
    "RevokeInvitationResponse": {
      "properties": {},
      "type": "object"
    },
    "Room": {
      "description": "A room with attributes.",
      "properties": {
        "Description": {
          "$ref": "#/definitions/RoomDescription",
          "description": "The description of a room."
        },
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The profile ARN of a room."
        },
        "ProviderCalendarId": {
          "$ref": "#/definitions/ProviderCalendarId",
          "description": "The provider calendar ARN of a room."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of a room."
        },
        "RoomName": {
          "$ref": "#/definitions/RoomName",
          "description": "The name of a room."
        }
      },
      "type": "object"
    },
    "RoomData": {
      "description": "The data of a room.",
      "properties": {
        "Description": {
          "$ref": "#/definitions/RoomDescription",
          "description": "The description of a room."
        },
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The profile ARN of a room."
        },
        "ProfileName": {
          "$ref": "#/definitions/ProfileName",
          "description": "The profile name of a room."
        },
        "ProviderCalendarId": {
          "$ref": "#/definitions/ProviderCalendarId",
          "description": "The provider calendar ARN of a room."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of a room."
        },
        "RoomName": {
          "$ref": "#/definitions/RoomName",
          "description": "The name of a room."
        }
      },
      "type": "object"
    },
    "RoomDataList": {
      "items": {
        "$ref": "#/definitions/RoomData"
      },
      "type": "array"
    },
    "RoomDescription": {
      "maxLength": 200,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "RoomName": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "RoomSkillParameter": {
      "description": "A skill parameter associated with a room.",
      "properties": {
        "ParameterKey": {
          "$ref": "#/definitions/RoomSkillParameterKey",
          "description": "The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values."
        },
        "ParameterValue": {
          "$ref": "#/definitions/RoomSkillParameterValue",
          "description": "The parameter value of a room skill parameter."
        }
      },
      "required": [
        "ParameterKey",
        "ParameterValue"
      ],
      "type": "object"
    },
    "RoomSkillParameterKey": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "RoomSkillParameterValue": {
      "maxLength": 512,
      "minLength": 1,
      "type": "string"
    },
    "RoomSkillParameters": {
      "items": {
        "$ref": "#/definitions/RoomSkillParameter"
      },
      "type": "array"
    },
    "S3KeyPrefix": {
      "maxLength": 100,
      "minLength": 0,
      "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
      "type": "string"
    },
    "SampleUtterances": {
      "items": {
        "$ref": "#/definitions/Utterance"
      },
      "type": "array"
    },
    "SearchAddressBooksRequest": {
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "The filters to use to list a specified set of address books. The supported filter key is AddressBookName."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults."
        },
        "SortCriteria": {
          "$ref": "#/definitions/SortList",
          "description": "The sort order to use in listing the specified set of address books. The supported sort key is AddressBookName."
        }
      },
      "type": "object"
    },
    "SearchAddressBooksResponse": {
      "properties": {
        "AddressBooks": {
          "$ref": "#/definitions/AddressBookDataList",
          "description": "The address books that meet the specified set of filter criteria, in sort order."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        },
        "TotalCount": {
          "$ref": "#/definitions/TotalCount",
          "description": "The total number of address books returned."
        }
      },
      "type": "object"
    },
    "SearchContactsRequest": {
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "The filters to use to list a specified set of address books. The supported filter keys are DisplayName, FirstName, LastName, and AddressBookArns."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults."
        },
        "SortCriteria": {
          "$ref": "#/definitions/SortList",
          "description": "The sort order to use in listing the specified set of contacts. The supported sort keys are DisplayName, FirstName, and LastName."
        }
      },
      "type": "object"
    },
    "SearchContactsResponse": {
      "properties": {
        "Contacts": {
          "$ref": "#/definitions/ContactDataList",
          "description": "The contacts that meet the specified set of filter criteria, in sort order."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        },
        "TotalCount": {
          "$ref": "#/definitions/TotalCount",
          "description": "The total number of contacts returned."
        }
      },
      "type": "object"
    },
    "SearchDevicesRequest": {
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "The filters to use to list a specified set of devices. Supported filter keys are DeviceName, DeviceStatus, DeviceStatusDetailCode, RoomName, DeviceType, DeviceSerialNumber, UnassociatedOnly, and ConnectionStatus (ONLINE and OFFLINE)."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>."
        },
        "SortCriteria": {
          "$ref": "#/definitions/SortList",
          "description": "The sort order to use in listing the specified set of devices. Supported sort keys are DeviceName, DeviceStatus, RoomName, DeviceType, DeviceSerialNumber, and ConnectionStatus."
        }
      },
      "type": "object"
    },
    "SearchDevicesResponse": {
      "properties": {
        "Devices": {
          "$ref": "#/definitions/DeviceDataList",
          "description": "The devices that meet the specified set of filter criteria, in sort order."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        },
        "TotalCount": {
          "$ref": "#/definitions/TotalCount",
          "description": "The total number of devices returned."
        }
      },
      "type": "object"
    },
    "SearchProfilesRequest": {
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "The filters to use to list a specified set of room profiles. Supported filter keys are ProfileName and Address. Required. "
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>."
        },
        "SortCriteria": {
          "$ref": "#/definitions/SortList",
          "description": "The sort order to use in listing the specified set of room profiles. Supported sort keys are ProfileName and Address."
        }
      },
      "type": "object"
    },
    "SearchProfilesResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        },
        "Profiles": {
          "$ref": "#/definitions/ProfileDataList",
          "description": "The profiles that meet the specified set of filter criteria, in sort order."
        },
        "TotalCount": {
          "$ref": "#/definitions/TotalCount",
          "description": "The total number of room profiles returned."
        }
      },
      "type": "object"
    },
    "SearchRoomsRequest": {
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "The filters to use to list a specified set of rooms. The supported filter keys are RoomName and ProfileName."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. "
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>."
        },
        "SortCriteria": {
          "$ref": "#/definitions/SortList",
          "description": "The sort order to use in listing the specified set of rooms. The supported sort keys are RoomName and ProfileName."
        }
      },
      "type": "object"
    },
    "SearchRoomsResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        },
        "Rooms": {
          "$ref": "#/definitions/RoomDataList",
          "description": "The rooms that meet the specified set of filter criteria, in sort order."
        },
        "TotalCount": {
          "$ref": "#/definitions/TotalCount",
          "description": "The total number of rooms returned."
        }
      },
      "type": "object"
    },
    "SearchSkillGroupsRequest": {
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "The filters to use to list a specified set of skill groups. The supported filter key is SkillGroupName. "
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. "
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required."
        },
        "SortCriteria": {
          "$ref": "#/definitions/SortList",
          "description": "The sort order to use in listing the specified set of skill groups. The supported sort key is SkillGroupName. "
        }
      },
      "type": "object"
    },
    "SearchSkillGroupsResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        },
        "SkillGroups": {
          "$ref": "#/definitions/SkillGroupDataList",
          "description": "The skill groups that meet the filter criteria, in sort order."
        },
        "TotalCount": {
          "$ref": "#/definitions/TotalCount",
          "description": "The total number of skill groups returned."
        }
      },
      "type": "object"
    },
    "SearchUsersRequest": {
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "The filters to use for listing a specific set of users. Required. Supported filter keys are UserId, FirstName, LastName, Email, and EnrollmentStatus."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. Required."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required."
        },
        "SortCriteria": {
          "$ref": "#/definitions/SortList",
          "description": "The sort order to use in listing the filtered set of users. Required. Supported sort keys are UserId, FirstName, LastName, Email, and EnrollmentStatus."
        }
      },
      "type": "object"
    },
    "SearchUsersResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned to indicate that there is more data available."
        },
        "TotalCount": {
          "$ref": "#/definitions/TotalCount",
          "description": "The total number of users returned."
        },
        "Users": {
          "$ref": "#/definitions/UserDataList",
          "description": "The users that meet the specified set of filter criteria, in sort order."
        }
      },
      "type": "object"
    },
    "SendInvitationRequest": {
      "properties": {
        "UserArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the user to whom to send an invitation. Required."
        }
      },
      "type": "object"
    },
    "SendInvitationResponse": {
      "properties": {},
      "type": "object"
    },
    "ShortDescription": {
      "type": "string"
    },
    "SkillDetails": {
      "description": "Granular information about the skill.",
      "properties": {
        "BulletPoints": {
          "$ref": "#/definitions/BulletPoints",
          "description": "The details about what the skill supports organized as bullet points."
        },
        "DeveloperInfo": {
          "$ref": "#/definitions/DeveloperInfo",
          "description": "The details about the developer that published the skill."
        },
        "EndUserLicenseAgreement": {
          "$ref": "#/definitions/EndUserLicenseAgreement",
          "description": "The URL of the end user license agreement."
        },
        "GenericKeywords": {
          "$ref": "#/definitions/GenericKeywords",
          "description": "The generic keywords associated with the skill that can be used to find a skill."
        },
        "InvocationPhrase": {
          "$ref": "#/definitions/InvocationPhrase",
          "description": "The phrase used to trigger the skill."
        },
        "NewInThisVersionBulletPoints": {
          "$ref": "#/definitions/NewInThisVersionBulletPoints",
          "description": "The updates added in bullet points."
        },
        "ProductDescription": {
          "$ref": "#/definitions/ProductDescription",
          "description": "The description of the product."
        },
        "ReleaseDate": {
          "$ref": "#/definitions/ReleaseDate",
          "description": "The date when the skill was released."
        },
        "Reviews": {
          "$ref": "#/definitions/Reviews",
          "description": "The list of reviews for the skill, including Key and Value pair."
        },
        "SkillTypes": {
          "$ref": "#/definitions/SkillTypes",
          "description": "The types of skills."
        }
      },
      "type": "object"
    },
    "SkillGroup": {
      "description": "A skill group with attributes.",
      "properties": {
        "Description": {
          "$ref": "#/definitions/SkillGroupDescription",
          "description": "The description of a skill group."
        },
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of a skill group."
        },
        "SkillGroupName": {
          "$ref": "#/definitions/SkillGroupName",
          "description": "The name of a skill group."
        }
      },
      "type": "object"
    },
    "SkillGroupData": {
      "description": "The attributes of a skill group.",
      "properties": {
        "Description": {
          "$ref": "#/definitions/SkillGroupDescription",
          "description": "The description of a skill group."
        },
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The skill group ARN of a skill group."
        },
        "SkillGroupName": {
          "$ref": "#/definitions/SkillGroupName",
          "description": "The skill group name of a skill group."
        }
      },
      "type": "object"
    },
    "SkillGroupDataList": {
      "items": {
        "$ref": "#/definitions/SkillGroupData"
      },
      "type": "array"
    },
    "SkillGroupDescription": {
      "maxLength": 200,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "SkillGroupName": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "SkillId": {
      "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
      "type": "string"
    },
    "SkillListMaxResults": {
      "maximum": 10,
      "minimum": 1,
      "type": "integer"
    },
    "SkillName": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "SkillNotLinkedException": {},
    "SkillStoreType": {
      "type": "string"
    },
    "SkillSummary": {
      "description": "The summary of skills.",
      "properties": {
        "EnablementType": {
          "$ref": "#/definitions/EnablementType",
          "description": "Whether the skill is enabled under the user's account, or if it requires linking to be used."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The ARN of the skill summary."
        },
        "SkillName": {
          "$ref": "#/definitions/SkillName",
          "description": "The name of the skill."
        },
        "SkillType": {
          "$ref": "#/definitions/SkillType",
          "description": "Whether the skill is publicly available or is a private skill."
        },
        "SupportsLinking": {
          "$ref": "#/definitions/boolean",
          "description": "Linking support for a skill."
        }
      },
      "type": "object"
    },
    "SkillSummaryList": {
      "items": {
        "$ref": "#/definitions/SkillSummary"
      },
      "type": "array"
    },
    "SkillType": {
      "enum": [
        "PUBLIC",
        "PRIVATE"
      ],
      "maxLength": 100,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
      "type": "string"
    },
    "SkillTypeFilter": {
      "enum": [
        "PUBLIC",
        "PRIVATE",
        "ALL"
      ],
      "type": "string"
    },
    "SkillTypes": {
      "items": {
        "$ref": "#/definitions/SkillStoreType"
      },
      "type": "array"
    },
    "SkillsStoreSkill": {
      "description": "The detailed information about an Alexa skill.",
      "properties": {
        "IconUrl": {
          "$ref": "#/definitions/IconUrl",
          "description": "The URL where the skill icon resides."
        },
        "SampleUtterances": {
          "$ref": "#/definitions/SampleUtterances",
          "description": "Sample utterances that interact with the skill."
        },
        "ShortDescription": {
          "$ref": "#/definitions/ShortDescription",
          "description": "Short description about the skill."
        },
        "SkillDetails": {
          "$ref": "#/definitions/SkillDetails",
          "description": "Information about the skill."
        },
        "SkillId": {
          "$ref": "#/definitions/SkillId",
          "description": "The ARN of the skill."
        },
        "SkillName": {
          "$ref": "#/definitions/SkillName",
          "description": "The name of the skill."
        },
        "SupportsLinking": {
          "$ref": "#/definitions/boolean",
          "description": "Linking support for a skill."
        }
      },
      "type": "object"
    },
    "SkillsStoreSkillList": {
      "items": {
        "$ref": "#/definitions/SkillsStoreSkill"
      },
      "type": "array"
    },
    "SmartHomeAppliance": {
      "description": "A smart home appliance that can connect to a central system. Any domestic device can be a smart appliance. ",
      "properties": {
        "Description": {
          "$ref": "#/definitions/ApplianceDescription",
          "description": "The description of the smart home appliance."
        },
        "FriendlyName": {
          "$ref": "#/definitions/ApplianceFriendlyName",
          "description": "The friendly name of the smart home appliance."
        },
        "ManufacturerName": {
          "$ref": "#/definitions/ApplianceManufacturerName",
          "description": "The name of the manufacturer of the smart home appliance."
        }
      },
      "type": "object"
    },
    "SmartHomeApplianceList": {
      "items": {
        "$ref": "#/definitions/SmartHomeAppliance"
      },
      "type": "array"
    },
    "SoftwareVersion": {
      "type": "string"
    },
    "Sort": {
      "description": "An object representing a sort criteria. ",
      "properties": {
        "Key": {
          "$ref": "#/definitions/SortKey",
          "description": "The sort key of a sort object."
        },
        "Value": {
          "$ref": "#/definitions/SortValue",
          "description": "The sort value of a sort object."
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object"
    },
    "SortKey": {
      "maxLength": 500,
      "minLength": 1,
      "type": "string"
    },
    "SortList": {
      "items": {
        "$ref": "#/definitions/Sort"
      },
      "maxItems": 25,
      "type": "array"
    },
    "SortValue": {
      "enum": [
        "ASC",
        "DESC"
      ],
      "type": "string"
    },
    "StartDeviceSyncRequest": {
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the device to sync. Required."
        },
        "Features": {
          "$ref": "#/definitions/Features",
          "description": "Request structure to start the device sync. Required."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room with which the device to sync is associated. Required."
        }
      },
      "required": [
        "Features"
      ],
      "type": "object"
    },
    "StartDeviceSyncResponse": {
      "properties": {},
      "type": "object"
    },
    "StartSmartHomeApplianceDiscoveryRequest": {
      "properties": {
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The room where smart home appliance discovery was initiated."
        }
      },
      "required": [
        "RoomArn"
      ],
      "type": "object"
    },
    "StartSmartHomeApplianceDiscoveryResponse": {
      "properties": {},
      "type": "object"
    },
    "Tag": {
      "description": "A key-value pair that can be associated with a resource. ",
      "properties": {
        "Key": {
          "$ref": "#/definitions/TagKey",
          "description": "The key of a tag. Tag keys are case-sensitive. "
        },
        "Value": {
          "$ref": "#/definitions/TagValue",
          "description": "The value of a tag. Tag values are case-sensitive and can be null."
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "type": "array"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TagResourceRequest": {
      "properties": {
        "Arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the resource to which to add metadata tags. Required. "
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags to be added to the specified resource. Do not provide system tags. Required. "
        }
      },
      "required": [
        "Arn",
        "Tags"
      ],
      "type": "object"
    },
    "TagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "minLength": 0,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TemperatureUnit": {
      "enum": [
        "FAHRENHEIT",
        "CELSIUS"
      ],
      "type": "string"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "Timezone": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "TotalCount": {
      "type": "integer"
    },
    "UnauthorizedException": {},
    "UntagResourceRequest": {
      "properties": {
        "Arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the resource from which to remove metadata tags. Required. "
        },
        "TagKeys": {
          "$ref": "#/definitions/TagKeyList",
          "description": "The tags to be removed from the specified resource. Do not provide system tags. Required. "
        }
      },
      "required": [
        "Arn",
        "TagKeys"
      ],
      "type": "object"
    },
    "UntagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateAddressBookRequest": {
      "properties": {
        "AddressBookArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room to update."
        },
        "Description": {
          "$ref": "#/definitions/AddressBookDescription",
          "description": "The updated description of the room."
        },
        "Name": {
          "$ref": "#/definitions/AddressBookName",
          "description": "The updated name of the room."
        }
      },
      "required": [
        "AddressBookArn"
      ],
      "type": "object"
    },
    "UpdateAddressBookResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateBusinessReportScheduleRequest": {
      "properties": {
        "Format": {
          "$ref": "#/definitions/BusinessReportFormat",
          "description": "The format of the generated report (individual CSV files or zipped files of individual files)."
        },
        "Recurrence": {
          "$ref": "#/definitions/BusinessReportRecurrence",
          "description": "The recurrence of the reports."
        },
        "S3BucketName": {
          "$ref": "#/definitions/CustomerS3BucketName",
          "description": "The S3 location of the output reports."
        },
        "S3KeyPrefix": {
          "$ref": "#/definitions/S3KeyPrefix",
          "description": "The S3 key where the report is delivered."
        },
        "ScheduleArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the business report schedule."
        },
        "ScheduleName": {
          "$ref": "#/definitions/BusinessReportScheduleName",
          "description": "The name identifier of the schedule."
        }
      },
      "required": [
        "ScheduleArn"
      ],
      "type": "object"
    },
    "UpdateBusinessReportScheduleResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateConferenceProviderRequest": {
      "properties": {
        "ConferenceProviderArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the conference provider."
        },
        "ConferenceProviderType": {
          "$ref": "#/definitions/ConferenceProviderType",
          "description": "The type of the conference provider."
        },
        "IPDialIn": {
          "$ref": "#/definitions/IPDialIn",
          "description": "The IP endpoint and protocol for calling."
        },
        "MeetingSetting": {
          "$ref": "#/definitions/MeetingSetting",
          "description": "The meeting settings for the conference provider."
        },
        "PSTNDialIn": {
          "$ref": "#/definitions/PSTNDialIn",
          "description": "The information for PSTN conferencing."
        }
      },
      "required": [
        "ConferenceProviderArn",
        "ConferenceProviderType",
        "MeetingSetting"
      ],
      "type": "object"
    },
    "UpdateConferenceProviderResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateContactRequest": {
      "properties": {
        "ContactArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the contact to update."
        },
        "DisplayName": {
          "$ref": "#/definitions/ContactName",
          "description": "The updated display name of the contact."
        },
        "FirstName": {
          "$ref": "#/definitions/ContactName",
          "description": "The updated first name of the contact."
        },
        "LastName": {
          "$ref": "#/definitions/ContactName",
          "description": "The updated last name of the contact."
        },
        "PhoneNumber": {
          "$ref": "#/definitions/E164PhoneNumber",
          "description": "The updated phone number of the contact."
        }
      },
      "required": [
        "ContactArn"
      ],
      "type": "object"
    },
    "UpdateContactResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateDeviceRequest": {
      "properties": {
        "DeviceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the device to update. Required."
        },
        "DeviceName": {
          "$ref": "#/definitions/DeviceName",
          "description": "The updated device name. Required."
        }
      },
      "type": "object"
    },
    "UpdateDeviceResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateProfileRequest": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/Address",
          "description": "The updated address for the room profile."
        },
        "DistanceUnit": {
          "$ref": "#/definitions/DistanceUnit",
          "description": "The updated distance unit for the room profile."
        },
        "IsDefault": {
          "$ref": "#/definitions/Boolean",
          "description": "Sets the profile as default if selected. If this is missing, no update is done to the default status."
        },
        "MaxVolumeLimit": {
          "$ref": "#/definitions/MaxVolumeLimit",
          "description": "The updated maximum volume limit for the room profile."
        },
        "PSTNEnabled": {
          "$ref": "#/definitions/Boolean",
          "description": "Whether the PSTN setting of the room profile is enabled."
        },
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room profile to update. Required."
        },
        "ProfileName": {
          "$ref": "#/definitions/ProfileName",
          "description": "The updated name for the room profile."
        },
        "SetupModeDisabled": {
          "$ref": "#/definitions/Boolean",
          "description": "Whether the setup mode of the profile is enabled."
        },
        "TemperatureUnit": {
          "$ref": "#/definitions/TemperatureUnit",
          "description": "The updated temperature unit for the room profile."
        },
        "Timezone": {
          "$ref": "#/definitions/Timezone",
          "description": "The updated timezone for the room profile."
        },
        "WakeWord": {
          "$ref": "#/definitions/WakeWord",
          "description": "The updated wake word for the room profile."
        }
      },
      "type": "object"
    },
    "UpdateProfileResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateRoomRequest": {
      "properties": {
        "Description": {
          "$ref": "#/definitions/RoomDescription",
          "description": "The updated description for the room."
        },
        "ProfileArn": {
          "$ref": "#/definitions/Arn",
          "description": "The updated profile ARN for the room."
        },
        "ProviderCalendarId": {
          "$ref": "#/definitions/ProviderCalendarId",
          "description": "The updated provider calendar ARN for the room."
        },
        "RoomArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the room to update. "
        },
        "RoomName": {
          "$ref": "#/definitions/RoomName",
          "description": "The updated name for the room."
        }
      },
      "type": "object"
    },
    "UpdateRoomResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateSkillGroupRequest": {
      "properties": {
        "Description": {
          "$ref": "#/definitions/SkillGroupDescription",
          "description": "The updated description for the skill group."
        },
        "SkillGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the skill group to update. "
        },
        "SkillGroupName": {
          "$ref": "#/definitions/SkillGroupName",
          "description": "The updated name for the skill group."
        }
      },
      "type": "object"
    },
    "UpdateSkillGroupResponse": {
      "properties": {},
      "type": "object"
    },
    "Url": {
      "type": "string"
    },
    "UserCode": {
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "UserData": {
      "description": "Information related to a user.",
      "properties": {
        "Email": {
          "$ref": "#/definitions/Email",
          "description": "The email of a user."
        },
        "EnrollmentId": {
          "$ref": "#/definitions/EnrollmentId",
          "description": "The enrollment ARN of a user."
        },
        "EnrollmentStatus": {
          "$ref": "#/definitions/EnrollmentStatus",
          "description": "The enrollment status of a user."
        },
        "FirstName": {
          "$ref": "#/definitions/user_FirstName",
          "description": "The first name of a user."
        },
        "LastName": {
          "$ref": "#/definitions/user_LastName",
          "description": "The last name of a user."
        },
        "UserArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of a user."
        }
      },
      "type": "object"
    },
    "UserDataList": {
      "items": {
        "$ref": "#/definitions/UserData"
      },
      "type": "array"
    },
    "UserId": {
      "pattern": "amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}",
      "type": "string"
    },
    "Utterance": {
      "type": "string"
    },
    "Value": {
      "minLength": 1,
      "type": "string"
    },
    "WakeWord": {
      "enum": [
        "ALEXA",
        "AMAZON",
        "ECHO",
        "COMPUTER"
      ],
      "type": "string"
    },
    "boolean": {
      "type": "boolean"
    },
    "user_FirstName": {
      "maxLength": 30,
      "minLength": 0,
      "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
      "type": "string"
    },
    "user_LastName": {
      "maxLength": 30,
      "minLength": 0,
      "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
      "type": "string"
    },
    "user_UserId": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9@_+.-]*",
      "type": "string"
    }
  }
}
