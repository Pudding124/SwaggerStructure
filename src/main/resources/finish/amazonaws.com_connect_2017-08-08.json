{
  "swagger": "2.0",
  "schemes": [
    "https",
    "http"
  ],
  "host": "connect.amazonaws.com",
  "basePath": "/",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>The Amazon Connect API Reference provides descriptions, syntax, and usage examples for each of the Amazon Connect actions, data types, parameters, and errors. Amazon Connect is a cloud-based contact center solution that makes it easy to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Throttling limits for the Amazon Connect API operations:</p> <p>For the <code>GetMetricData</code> and <code>GetCurrentMetricData</code> operations, a RateLimit of 5 per second, and a BurstLimit of 8 per second.</p> <p>For all other operations, a RateLimit of 2 per second, and a BurstLimit of 5 per second.</p> <p>You can request an increase to the throttling limits by submitting a <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase\">Amazon Connect service limits increase form</a>. You must be signed in to your AWS account to access the form.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Connect Service",
    "version": "2017-08-08",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/connect-2017-08-08.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "connect"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/connect/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "query",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "query",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/contact/attributes": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>The <code>UpdateContactAttributes</code> operation lets you programmatically create new, or update existing, contact attributes associated with a contact. You can use the operation to add or update attributes for both ongoing and completed contacts. For example, you can update the customer's name or the reason the customer called while the call is active, or add notes about steps that the agent took during the call that are displayed to the next agent that takes the call. You can also use the <code>UpdateContactAttributes</code> operation to update attributes for a contact using data from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls for additional analysis, such as legal review or identifying abusive callers.</p> <p>Contact attributes are available in Amazon Connect for 24 months, and are then deleted.</p> <p> <i>Important:</i> </p> <p>You cannot use the operation to update attributes for contacts that occurred prior to the release of the API, September 12, 2018. You can update attributes only for contacts that started after the release of the API. If you attempt to update attributes for a contact that occurred prior to the release of the API, a 400 error is returned. This applies also to queued callbacks that were initiated prior to the release of the API but are still active in your instance.</p>",
        "operationId": "UpdateContactAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateContactAttributesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateContactAttributesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      }
    },
    "/contact/attributes/{InstanceId}/{InitialContactId}": {
      "get": {
        "description": "Retrieves the contact attributes associated with a contact.",
        "operationId": "GetContactAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetContactAttributesRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "InitialContactId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetContactAttributesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/contact/outbound-voice": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "description": "<p>The <code>StartOutboundVoiceContact</code> operation initiates a contact flow to place an outbound call to a customer.</p> <p>If you are using an IAM account, it must have permission to the <code>connect:StartOutboundVoiceContact</code> action.</p> <p>There is a 60 second dialing timeout for this operation. If the call is not connected after 60 seconds, the call fails.</p>",
        "operationId": "StartOutboundVoiceContact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartOutboundVoiceContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartOutboundVoiceContactResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "DestinationNotAllowedException",
            "schema": {
              "$ref": "#/definitions/DestinationNotAllowedException"
            }
          },
          "486": {
            "description": "OutboundContactNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OutboundContactNotPermittedException"
            }
          }
        }
      }
    },
    "/contact/stop": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Ends the contact initiated by the <code>StartOutboundVoiceContact</code> operation.</p> <p>If you are using an IAM account, it must have permission to the <code>connect:StopContact</code> action.</p>",
        "operationId": "StopContact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopContactResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ContactNotFoundException",
            "schema": {
              "$ref": "#/definitions/ContactNotFoundException"
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      }
    },
    "/metrics/current/{InstanceId}": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>The <code>GetCurrentMetricData</code> operation retrieves current metric data from your Amazon Connect instance.</p> <p>If you are using an IAM account, it must have permission to the <code>connect:GetCurrentMetricData</code> action.</p>",
        "operationId": "GetCurrentMetricData",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCurrentMetricDataRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetCurrentMetricDataResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        }
      }
    },
    "/metrics/historical/{InstanceId}": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>The <code>GetMetricData</code> operation retrieves historical metrics data from your Amazon Connect instance.</p> <p>If you are using an IAM account, it must have permission to the <code>connect:GetMetricData</code> action.</p>",
        "operationId": "GetMetricData",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetMetricDataRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetMetricDataResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        }
      }
    },
    "/routing-profiles-summary/{InstanceId}": {
      "get": {
        "description": "Returns an array of <code>RoutingProfileSummary</code> objects that includes information about the routing profiles in your instance.",
        "operationId": "ListRoutingProfiles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListRoutingProfilesRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRoutingProfilesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/security-profiles-summary/{InstanceId}": {
      "get": {
        "description": "Returns an array of SecurityProfileSummary objects that contain information about the security profiles in your instance, including the ARN, Id, and Name of the security profile.",
        "operationId": "ListSecurityProfiles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListSecurityProfilesRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSecurityProfilesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/user-hierarchy-groups-summary/{InstanceId}": {
      "get": {
        "description": "Returns a <code>UserHierarchyGroupSummaryList</code>, which is an array of <code>HierarchyGroupSummary</code> objects that contain information about the hierarchy groups in your instance.",
        "operationId": "ListUserHierarchyGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListUserHierarchyGroupsRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListUserHierarchyGroupsResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}": {
      "get": {
        "description": "Returns a <code>HierarchyGroup</code> object that includes information about a hierarchy group in your instance.",
        "operationId": "DescribeUserHierarchyGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeUserHierarchyGroupRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "HierarchyGroupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeUserHierarchyGroupResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/user-hierarchy-structure/{InstanceId}": {
      "get": {
        "description": "Returns a <code>HiearchyGroupStructure</code> object, which contains data about the levels in the agent hierarchy.",
        "operationId": "DescribeUserHierarchyStructure",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeUserHierarchyStructureRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeUserHierarchyStructureResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/user/federate/{InstanceId}": {
      "get": {
        "description": "Retrieves a token for federation.",
        "operationId": "GetFederationToken",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetFederationTokenRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetFederationTokenResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "UserNotFoundException",
            "schema": {
              "$ref": "#/definitions/UserNotFoundException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "485": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/users-summary/{InstanceId}": {
      "get": {
        "description": "Returns a <code>UserSummaryList</code>, which is an array of <code>UserSummary</code> objects.",
        "operationId": "ListUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListUsersRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListUsersResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/users/{InstanceId}": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "description": "Creates a new user account in your Amazon Connect instance.",
        "operationId": "CreateUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      }
    },
    "/users/{InstanceId}/{UserId}": {
      "delete": {
        "description": "Deletes a user account from Amazon Connect.",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteUserRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      },
      "get": {
        "description": "Returns a <code>User</code> object that contains information about the user account specified by the <code>UserId</code>.",
        "operationId": "DescribeUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeUserRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeUserResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/users/{InstanceId}/{UserId}/hierarchy": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Assigns the specified hierarchy group to the user.",
        "operationId": "UpdateUserHierarchy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserHierarchyRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      }
    },
    "/users/{InstanceId}/{UserId}/identity-info": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates the identity information for the specified user in a <code>UserIdentityInfo</code> object, including email, first name, and last name.",
        "operationId": "UpdateUserIdentityInfo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserIdentityInfoRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      }
    },
    "/users/{InstanceId}/{UserId}/phone-config": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates the phone configuration settings in the <code>UserPhoneConfig</code> object for the specified user.",
        "operationId": "UpdateUserPhoneConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserPhoneConfigRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      }
    },
    "/users/{InstanceId}/{UserId}/routing-profile": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Assigns the specified routing profile to a user.",
        "operationId": "UpdateUserRoutingProfile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserRoutingProfileRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      }
    },
    "/users/{InstanceId}/{UserId}/security-profiles": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates the security profiles assigned to the user.",
        "operationId": "UpdateUserSecurityProfiles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserSecurityProfilesRequest"
            }
          },
          {
            "in": "path",
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ARN": {
      "type": "string"
    },
    "AfterContactWorkTimeLimit": {
      "minimum": 0,
      "type": "integer"
    },
    "AgentFirstName": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "AgentLastName": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "AgentUsername": {
      "maxLength": 20,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9\\_\\-\\.]+",
      "type": "string"
    },
    "AttributeName": {
      "maxLength": 32767,
      "minLength": 1,
      "type": "string"
    },
    "AttributeValue": {
      "maxLength": 32767,
      "minLength": 0,
      "type": "string"
    },
    "Attributes": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/AttributeName"
          },
          "value": {
            "$ref": "#/definitions/AttributeValue"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "AutoAccept": {
      "type": "boolean"
    },
    "Channel": {
      "enum": [
        "VOICE"
      ],
      "type": "string"
    },
    "Channels": {
      "items": {
        "$ref": "#/definitions/Channel"
      },
      "maxItems": 1,
      "type": "array"
    },
    "ClientToken": {
      "maxLength": 500,
      "type": "string"
    },
    "Comparison": {
      "enum": [
        "LT"
      ],
      "type": "string"
    },
    "ContactFlowId": {
      "maxLength": 500,
      "type": "string"
    },
    "ContactId": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "ContactNotFoundException": {},
    "CreateUserRequest": {
      "properties": {
        "DirectoryUserId": {
          "$ref": "#/definitions/DirectoryUserId",
          "description": "<p>The unique identifier for the user account in the directory service directory used for identity management. If Amazon Connect is unable to access the existing directory, you can use the <code>DirectoryUserId</code> to authenticate users. If you include the parameter, it is assumed that Amazon Connect cannot access the directory. If the parameter is not included, the <code>UserIdentityInfo</code> is used to authenticate users from your existing directory.</p> <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an <code>InvalidRequestException</code> is returned.</p>"
        },
        "HierarchyGroupId": {
          "$ref": "#/definitions/HierarchyGroupId",
          "description": "The unique identifier for the hierarchy group to assign to the user created."
        },
        "IdentityInfo": {
          "$ref": "#/definitions/UserIdentityInfo",
          "description": "Information about the user, including email address, first name, and last name."
        },
        "Password": {
          "$ref": "#/definitions/Password",
          "description": "The password for the user account to create. This is required if you are using Amazon Connect for identity management. If you are using SAML for identity management and include this parameter, an <code>InvalidRequestException</code> is returned."
        },
        "PhoneConfig": {
          "$ref": "#/definitions/UserPhoneConfig",
          "description": "Specifies the phone settings for the user, including <code>AfterContactWorkTimeLimit</code>, <code>AutoAccept</code>, <code>DeskPhoneNumber</code>, and <code>PhoneType</code>."
        },
        "RoutingProfileId": {
          "$ref": "#/definitions/RoutingProfileId",
          "description": "The unique identifier for the routing profile to assign to the user created."
        },
        "SecurityProfileIds": {
          "$ref": "#/definitions/SecurityProfileIds",
          "description": "The unique identifier of the security profile to assign to the user created."
        },
        "Username": {
          "$ref": "#/definitions/AgentUsername",
          "description": "The user name in Amazon Connect for the account to create. If you are using SAML for identity management in your Amazon Connect, the value for <code>Username</code> can include up to 64 characters from [a-zA-Z0-9_-.\\@]+."
        }
      },
      "required": [
        "Username",
        "PhoneConfig",
        "SecurityProfileIds",
        "RoutingProfileId"
      ],
      "type": "object"
    },
    "CreateUserResponse": {
      "properties": {
        "UserArn": {
          "$ref": "#/definitions/ARN",
          "description": "The Amazon Resource Name (ARN) of the user account created."
        },
        "UserId": {
          "$ref": "#/definitions/UserId",
          "description": "The unique identifier for the user account in Amazon Connect"
        }
      },
      "type": "object"
    },
    "Credentials": {
      "description": "The credentials to use for federation.",
      "properties": {
        "AccessToken": {
          "$ref": "#/definitions/SecurityToken",
          "description": "An access token generated for a federated user to access Amazon Connect"
        },
        "AccessTokenExpiration": {
          "$ref": "#/definitions/timestamp",
          "description": "A token generated with an expiration time for the session a user is logged in to Amazon Connect"
        },
        "RefreshToken": {
          "$ref": "#/definitions/SecurityToken",
          "description": "Renews a token generated for a user to access the Amazon Connect instance."
        },
        "RefreshTokenExpiration": {
          "$ref": "#/definitions/timestamp",
          "description": "Renews the expiration timer for a generated token."
        }
      },
      "type": "object"
    },
    "CurrentMetric": {
      "description": "A <code>CurrentMetric</code> object that contains the Name and Unit for the metric.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/CurrentMetricName",
          "description": "The name of the metric."
        },
        "Unit": {
          "$ref": "#/definitions/Unit",
          "description": "The unit for the metric."
        }
      },
      "type": "object"
    },
    "CurrentMetricData": {
      "description": "A <code>CurrentMetricData</code> object.",
      "properties": {
        "Metric": {
          "$ref": "#/definitions/CurrentMetric",
          "description": "The metric in a <code>CurrentMetricData</code> object."
        },
        "Value": {
          "$ref": "#/definitions/Value",
          "description": "The value of the metric in the CurrentMetricData object."
        }
      },
      "type": "object"
    },
    "CurrentMetricDataCollections": {
      "items": {
        "$ref": "#/definitions/CurrentMetricData"
      },
      "type": "array"
    },
    "CurrentMetricName": {
      "description": "A list of current metric names.",
      "enum": [
        "AGENTS_ONLINE",
        "AGENTS_AVAILABLE",
        "AGENTS_ON_CALL",
        "AGENTS_NON_PRODUCTIVE",
        "AGENTS_AFTER_CONTACT_WORK",
        "AGENTS_ERROR",
        "AGENTS_STAFFED",
        "CONTACTS_IN_QUEUE",
        "OLDEST_CONTACT_AGE",
        "CONTACTS_SCHEDULED"
      ],
      "type": "string"
    },
    "CurrentMetricResult": {
      "description": "A <code>CurrentMetricResult</code> object.",
      "properties": {
        "Collections": {
          "$ref": "#/definitions/CurrentMetricDataCollections",
          "description": "The <code>Collections</code> for the <code>CurrentMetricResult</code> object."
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "The <code>Dimensions</code> for the <code>CurrentMetricResult</code> object."
        }
      },
      "type": "object"
    },
    "CurrentMetricResults": {
      "items": {
        "$ref": "#/definitions/CurrentMetricResult"
      },
      "type": "array"
    },
    "CurrentMetrics": {
      "items": {
        "$ref": "#/definitions/CurrentMetric"
      },
      "type": "array"
    },
    "DeleteUserRequest": {
      "properties": {},
      "type": "object"
    },
    "DescribeUserHierarchyGroupRequest": {
      "properties": {},
      "type": "object"
    },
    "DescribeUserHierarchyGroupResponse": {
      "properties": {
        "HierarchyGroup": {
          "$ref": "#/definitions/HierarchyGroup",
          "description": "Returns a <code>HierarchyGroup</code> object."
        }
      },
      "type": "object"
    },
    "DescribeUserHierarchyStructureRequest": {
      "properties": {},
      "type": "object"
    },
    "DescribeUserHierarchyStructureResponse": {
      "properties": {
        "HierarchyStructure": {
          "$ref": "#/definitions/HierarchyStructure",
          "description": "A <code>HierarchyStructure</code> object."
        }
      },
      "type": "object"
    },
    "DescribeUserRequest": {
      "properties": {},
      "type": "object"
    },
    "DescribeUserResponse": {
      "properties": {
        "User": {
          "$ref": "#/definitions/User",
          "description": "A <code>User</code> object that contains information about the user account and configuration settings."
        }
      },
      "type": "object"
    },
    "DestinationNotAllowedException": {},
    "Dimensions": {
      "description": "A <code>Dimensions</code> object that includes the Channel and Queue for the metric.",
      "properties": {
        "Channel": {
          "$ref": "#/definitions/Channel",
          "description": "The channel used for grouping and filters. Only VOICE is supported."
        },
        "Queue": {
          "$ref": "#/definitions/QueueReference",
          "description": "A <code>QueueReference</code> object used as one part of dimension for the metrics results."
        }
      },
      "type": "object"
    },
    "DirectoryUserId": {
      "type": "string"
    },
    "DuplicateResourceException": {},
    "Email": {
      "type": "string"
    },
    "Filters": {
      "description": "The filter, either channel or queues, to apply to the metric results retrieved.",
      "properties": {
        "Channels": {
          "$ref": "#/definitions/Channels",
          "description": "The Channel to use as a filter for the metrics returned. Only VOICE is supported."
        },
        "Queues": {
          "$ref": "#/definitions/Queues",
          "description": "A list of up to 100 queue IDs or queue ARNs to use to filter the metrics retrieved. You can include both IDs and ARNs in a request."
        }
      },
      "type": "object"
    },
    "GetContactAttributesRequest": {
      "properties": {},
      "type": "object"
    },
    "GetContactAttributesResponse": {
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/Attributes",
          "description": "The attributes to update."
        }
      },
      "type": "object"
    },
    "GetCurrentMetricDataRequest": {
      "properties": {
        "CurrentMetrics": {
          "$ref": "#/definitions/CurrentMetrics",
          "description": "<p>A list of <code>CurrentMetric</code> objects for the metrics to retrieve. Each <code>CurrentMetric</code> includes a name of a metric to retrieve and the unit to use for it. You must list each metric to retrieve data for in the request.</p> <p>The following metrics are available:</p> <dl> <dt>AGENTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_ONLINE</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_ON_CALL</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_STAFFED</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_AFTER_CONTACT_WORK</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_NON_PRODUCTIVE</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_ERROR</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>CONTACTS_IN_QUEUE</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>OLDEST_CONTACT_AGE</dt> <dd> <p>Unit: SECONDS</p> </dd> <dt>CONTACTS_SCHEDULED</dt> <dd> <p>Unit: COUNT</p> </dd> </dl>"
        },
        "Filters": {
          "$ref": "#/definitions/Filters",
          "description": "<p>A <code>Filters</code> object that contains a list of queue IDs or queue ARNs, up to 100, or list of Channels to use to filter the metrics returned in the response. Metric data is retrieved only for the resources associated with the queue IDs, ARNs, or Channels included in the filter. You can include both IDs and ARNs in the same request. To retrieve metrics for all queues, add the queue ID or ARN for each queue in your instance. Only VOICE is supported for Channels.</p> <p>To find the ARN for a queue, open the queue you want to use in the Amazon Connect Queue editor. The ARN for the queue is displayed in the address bar as part of the URL. For example, the queue ARN is the set of characters at the end of the URL, after 'id=' such as <code>arn:aws:connect:us-east-1:270923740243:instance/78fb859d-1b7d-44b1-8aa3-12f0835c5855/queue/1d1a4575-9618-40ab-bbeb-81e45795fe61</code>. The queue ID is also included in the URL, and is the string after 'queue/'.</p>"
        },
        "Groupings": {
          "$ref": "#/definitions/Groupings",
          "description": "<p>The grouping applied to the metrics returned. For example, when grouped by QUEUE, the metrics returned apply to each queue rather than aggregated for all queues. If you group by CHANNEL, you should include a Channels filter. The only supported channel is VOICE.</p> <p>If no <code>Grouping</code> is included in the request, a summary of <code>CurrentMetrics</code> is returned.</p>"
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResult100",
          "description": " <code>MaxResults</code> indicates the maximum number of results to return per page in the response, between 1 and 100."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the <a href=\"\">NextToken</a> must use the same request parameters as the request that generated the token.</p>"
        }
      },
      "required": [
        "Filters",
        "CurrentMetrics"
      ],
      "type": "object"
    },
    "GetCurrentMetricDataResponse": {
      "properties": {
        "DataSnapshotTime": {
          "$ref": "#/definitions/timestamp",
          "description": "The time at which <code>CurrentMetricData</code> was retrieved and cached for pagination."
        },
        "MetricResults": {
          "$ref": "#/definitions/CurrentMetricResults",
          "description": "<p>A list of <code>CurrentMetricResult</code> objects organized by <code>Dimensions</code> combining with <code>CurrentMetricDataCollections</code>.</p> <p> <code>Dimensions</code> is the resourceId specified in the <code>Filters</code> of the request. </p> <p> <code>Collections</code> is a list of <code>CurrentMetricData</code> objects with corresponding values to the <code>CurrentMetrics</code> specified in the request.</p> <p>If no <code>Grouping</code> is specified in the request, <code>Collections</code> is a summary for the <code>CurrentMetric</code> returned.</p>"
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "<p>A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the NextToken must use the same request parameters as the request that generated the token. </p>"
        }
      },
      "type": "object"
    },
    "GetFederationTokenRequest": {
      "properties": {},
      "type": "object"
    },
    "GetFederationTokenResponse": {
      "properties": {
        "Credentials": {
          "$ref": "#/definitions/Credentials",
          "description": "The credentials to use for federation."
        }
      },
      "type": "object"
    },
    "GetMetricDataRequest": {
      "properties": {
        "EndTime": {
          "$ref": "#/definitions/timestamp",
          "description": "<p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the <code>StartTime</code> timestamp.</p> <p>The time range between <code>StartTime</code> and <code>EndTime</code> must be less than 24 hours.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/Filters",
          "description": "<p>A <code>Filters</code> object that contains a list of queue IDs or queue ARNs, up to 100, or a list of Channels to use to filter the metrics returned in the response. Metric data is retrieved only for the resources associated with the IDs, ARNs, or Channels included in the filter. You can use both IDs and ARNs together in a request. Only VOICE is supported for Channel.</p> <p>To find the ARN for a queue, open the queue you want to use in the Amazon Connect Queue editor. The ARN for the queue is displayed in the address bar as part of the URL. For example, the queue ARN is the set of characters at the end of the URL, after 'id=' such as <code>arn:aws:connect:us-east-1:270923740243:instance/78fb859d-1b7d-44b1-8aa3-12f0835c5855/queue/1d1a4575-9618-40ab-bbeb-81e45795fe61</code>. The queue ID is also included in the URL, and is the string after 'queue/'.</p>"
        },
        "Groupings": {
          "$ref": "#/definitions/Groupings",
          "description": "<p>The grouping applied to the metrics returned. For example, when results are grouped by queueId, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p> <p>The current version supports grouping by Queue</p> <p>If no <code>Grouping</code> is included in the request, a summary of <code>HistoricalMetrics</code> for all queues is returned.</p>"
        },
        "HistoricalMetrics": {
          "$ref": "#/definitions/HistoricalMetrics",
          "description": "<p>A list of <code>HistoricalMetric</code> objects that contain the metrics to retrieve with the request.</p> <p>A <code>HistoricalMetric</code> object contains: <code>HistoricalMetricName</code>, <code>Statistic</code>, <code>Threshold</code>, and <code>Unit</code>.</p> <p>You must list each metric to retrieve data for in the request. For each historical metric you include in the request, you must include a <code>Unit</code> and a <code>Statistic</code>. </p> <p>The following historical metrics are available:</p> <dl> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_CONSULTED</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_HANDLED_INCOMING</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_HANDLED_OUTBOUND</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>API_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>CONTACTS_MISSED</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>OCCUPANCY</dt> <dd> <p>Unit: PERCENT</p> <p>Statistics: AVG</p> </dd> <dt>HANDLE_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistics: AVG</p> </dd> <dt>AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistics: AVG</p> </dd> <dt>QUEUED_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistics: MAX</p> </dd> <dt>ABANDON_TIME</dt> <dd> <p>Unit: COUNT</p> <p>Statistics: SUM</p> </dd> <dt>QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistics: AVG</p> </dd> <dt>HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistics: AVG</p> </dd> <dt>INTERACTION_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistics: AVG</p> </dd> <dt>INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistics: AVG</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>Unit: PERCENT</p> <p>Statistics: AVG</p> <p>Threshold: Only \"Less than\" comparisons are supported, with the following service level thresholds: 15, 20, 25, 30, 45, 60, 90, 120, 180, 240, 300, 600</p> </dd> </dl>"
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResult100",
          "description": "Indicates the maximum number of results to return per page in the response, between 1-100."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results."
        },
        "StartTime": {
          "$ref": "#/definitions/timestamp",
          "description": "<p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p> <p> <code>StartTime</code> cannot be earlier than 24 hours before the time of the request. Historical metrics are available in Amazon Connect only for 24 hours.</p>"
        }
      },
      "required": [
        "StartTime",
        "EndTime",
        "Filters",
        "HistoricalMetrics"
      ],
      "type": "object"
    },
    "GetMetricDataResponse": {
      "properties": {
        "MetricResults": {
          "$ref": "#/definitions/HistoricalMetricResults",
          "description": "<p>A list of <code>HistoricalMetricResult</code> objects, organized by <code>Dimensions</code>, which is the ID of the resource specified in the <code>Filters</code> used for the request. The metrics are combined with the metrics included in <code>Collections</code>, which is a list of <code>HisotricalMetricData</code> objects.</p> <p>If no <code>Grouping</code> is specified in the request, <code>Collections</code> includes summary data for the <code>HistoricalMetrics</code>.</p>"
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "<p>A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the NextToken must use the same request parameters as the request that generated the token. </p>"
        }
      },
      "type": "object"
    },
    "Grouping": {
      "enum": [
        "QUEUE",
        "CHANNEL"
      ],
      "type": "string"
    },
    "Groupings": {
      "items": {
        "$ref": "#/definitions/Grouping"
      },
      "maxItems": 2,
      "type": "array"
    },
    "HierarchyGroup": {
      "description": "A <code>HierarchyGroup</code> object that contains information about a hierarchy group in your Amazon Connect instance.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/ARN",
          "description": "The Amazon Resource Name (ARN) for the hierarchy group."
        },
        "HierarchyPath": {
          "$ref": "#/definitions/HierarchyPath",
          "description": "A <code>HierarchyPath</code> object that contains information about the levels in the hierarchy group."
        },
        "Id": {
          "$ref": "#/definitions/HierarchyGroupId",
          "description": "The identifier for the hierarchy group."
        },
        "LevelId": {
          "$ref": "#/definitions/HierarchyLevelId",
          "description": "The identifier for the level in the hierarchy group."
        },
        "Name": {
          "$ref": "#/definitions/HierarchyGroupName",
          "description": "The name of the hierarchy group in your instance."
        }
      },
      "type": "object"
    },
    "HierarchyGroupId": {
      "type": "string"
    },
    "HierarchyGroupName": {
      "type": "string"
    },
    "HierarchyGroupSummary": {
      "description": "A <code>HierarchyGroupSummary</code> object that contains information about the hierarchy group, including ARN, Id, and Name.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/ARN",
          "description": "The ARN for the hierarchy group."
        },
        "Id": {
          "$ref": "#/definitions/HierarchyGroupId",
          "description": "The identifier of the hierarchy group."
        },
        "Name": {
          "$ref": "#/definitions/HierarchyGroupName",
          "description": "The name of the hierarchy group."
        }
      },
      "type": "object"
    },
    "HierarchyGroupSummaryList": {
      "items": {
        "$ref": "#/definitions/HierarchyGroupSummary"
      },
      "type": "array"
    },
    "HierarchyLevel": {
      "description": "A <code>HierarchyLevel</code> object that contains information about the levels in a hierarchy group, including ARN, Id, and Name.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/ARN",
          "description": "The ARN for the hierarchy group level."
        },
        "Id": {
          "$ref": "#/definitions/HierarchyLevelId",
          "description": "The identifier for the hierarchy group level."
        },
        "Name": {
          "$ref": "#/definitions/HierarchyLevelName",
          "description": "The name of the hierarchy group level."
        }
      },
      "type": "object"
    },
    "HierarchyLevelId": {
      "type": "string"
    },
    "HierarchyLevelName": {
      "type": "string"
    },
    "HierarchyPath": {
      "description": "A <code>HierarchyPath</code> object that contains information about the levels of the hierarchy group.",
      "properties": {
        "LevelFive": {
          "$ref": "#/definitions/HierarchyGroupSummary",
          "description": "A <code>HierarchyGroupSummary</code> object that contains information about the level of the hierarchy group, including ARN, Id, and Name."
        },
        "LevelFour": {
          "$ref": "#/definitions/HierarchyGroupSummary",
          "description": "A <code>HierarchyGroupSummary</code> object that contains information about the level of the hierarchy group, including ARN, Id, and Name."
        },
        "LevelOne": {
          "$ref": "#/definitions/HierarchyGroupSummary",
          "description": "A <code>HierarchyGroupSummary</code> object that contains information about the level of the hierarchy group, including ARN, Id, and Name."
        },
        "LevelThree": {
          "$ref": "#/definitions/HierarchyGroupSummary",
          "description": "A <code>HierarchyGroupSummary</code> object that contains information about the level of the hierarchy group, including ARN, Id, and Name."
        },
        "LevelTwo": {
          "$ref": "#/definitions/HierarchyGroupSummary",
          "description": "A <code>HierarchyGroupSummary</code> object that contains information about the level of the hierarchy group, including ARN, Id, and Name."
        }
      },
      "type": "object"
    },
    "HierarchyStructure": {
      "description": "A <code>HierarchyStructure</code> object that contains information about the hierarchy group structure.",
      "properties": {
        "LevelFive": {
          "$ref": "#/definitions/HierarchyLevel",
          "description": "A <code>HierarchyLevel</code> object that contains information about the hierarchy group level."
        },
        "LevelFour": {
          "$ref": "#/definitions/HierarchyLevel",
          "description": "A <code>HierarchyLevel</code> object that contains information about the hierarchy group level."
        },
        "LevelOne": {
          "$ref": "#/definitions/HierarchyLevel",
          "description": "A <code>HierarchyLevel</code> object that contains information about the hierarchy group level."
        },
        "LevelThree": {
          "$ref": "#/definitions/HierarchyLevel",
          "description": "A <code>HierarchyLevel</code> object that contains information about the hierarchy group level."
        },
        "LevelTwo": {
          "$ref": "#/definitions/HierarchyLevel",
          "description": "A <code>HierarchyLevel</code> object that contains information about the hierarchy group level."
        }
      },
      "type": "object"
    },
    "HistoricalMetric": {
      "description": "A <code>HistoricalMetric</code> object that contains the Name, Unit, Statistic, and Threshold for the metric.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/HistoricalMetricName",
          "description": "The name of the historical metric."
        },
        "Statistic": {
          "$ref": "#/definitions/Statistic",
          "description": "The statistic for the metric."
        },
        "Threshold": {
          "$ref": "#/definitions/Threshold",
          "description": "The threshold for the metric, used with service level metrics."
        },
        "Unit": {
          "$ref": "#/definitions/Unit",
          "description": "The unit for the metric."
        }
      },
      "type": "object"
    },
    "HistoricalMetricData": {
      "description": "A <code>HistoricalMetricData</code> object than contains a <code>Metric</code> and a <code>Value</code>.",
      "properties": {
        "Metric": {
          "$ref": "#/definitions/HistoricalMetric",
          "description": "A <code>HistoricalMetric</code> object."
        },
        "Value": {
          "$ref": "#/definitions/Value",
          "description": "The <code>Value</code> of the metric."
        }
      },
      "type": "object"
    },
    "HistoricalMetricDataCollections": {
      "items": {
        "$ref": "#/definitions/HistoricalMetricData"
      },
      "type": "array"
    },
    "HistoricalMetricName": {
      "description": "A list of historical metric names.",
      "enum": [
        "CONTACTS_QUEUED",
        "CONTACTS_HANDLED",
        "CONTACTS_ABANDONED",
        "CONTACTS_CONSULTED",
        "CONTACTS_AGENT_HUNG_UP_FIRST",
        "CONTACTS_HANDLED_INCOMING",
        "CONTACTS_HANDLED_OUTBOUND",
        "CONTACTS_HOLD_ABANDONS",
        "CONTACTS_TRANSFERRED_IN",
        "CONTACTS_TRANSFERRED_OUT",
        "CONTACTS_TRANSFERRED_IN_FROM_QUEUE",
        "CONTACTS_TRANSFERRED_OUT_FROM_QUEUE",
        "CONTACTS_MISSED",
        "CALLBACK_CONTACTS_HANDLED",
        "API_CONTACTS_HANDLED",
        "OCCUPANCY",
        "HANDLE_TIME",
        "AFTER_CONTACT_WORK_TIME",
        "QUEUED_TIME",
        "ABANDON_TIME",
        "QUEUE_ANSWER_TIME",
        "HOLD_TIME",
        "INTERACTION_TIME",
        "INTERACTION_AND_HOLD_TIME",
        "SERVICE_LEVEL"
      ],
      "type": "string"
    },
    "HistoricalMetricResult": {
      "description": "The metrics data returned from a <code>GetMetricData</code> operation.",
      "properties": {
        "Collections": {
          "$ref": "#/definitions/HistoricalMetricDataCollections",
          "description": "A list of <code>HistoricalMetricData</code> objects."
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "The <code>Dimensions</code> for the metrics."
        }
      },
      "type": "object"
    },
    "HistoricalMetricResults": {
      "items": {
        "$ref": "#/definitions/HistoricalMetricResult"
      },
      "type": "array"
    },
    "HistoricalMetrics": {
      "items": {
        "$ref": "#/definitions/HistoricalMetric"
      },
      "type": "array"
    },
    "InstanceId": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "InternalServiceException": {},
    "InvalidParameterException": {},
    "InvalidRequestException": {},
    "LimitExceededException": {},
    "ListRoutingProfilesRequest": {
      "properties": {},
      "type": "object"
    },
    "ListRoutingProfilesResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results."
        },
        "RoutingProfileSummaryList": {
          "$ref": "#/definitions/RoutingProfileSummaryList",
          "description": "An array of <code>RoutingProfileSummary</code> objects that include the ARN, Id, and Name of the routing profile."
        }
      },
      "type": "object"
    },
    "ListSecurityProfilesRequest": {
      "properties": {},
      "type": "object"
    },
    "ListSecurityProfilesResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results."
        },
        "SecurityProfileSummaryList": {
          "$ref": "#/definitions/SecurityProfileSummaryList",
          "description": "An array of <code>SecurityProfileSummary</code> objects."
        }
      },
      "type": "object"
    },
    "ListUserHierarchyGroupsRequest": {
      "properties": {},
      "type": "object"
    },
    "ListUserHierarchyGroupsResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results."
        },
        "UserHierarchyGroupSummaryList": {
          "$ref": "#/definitions/HierarchyGroupSummaryList",
          "description": "An array of <code>HierarchyGroupSummary</code> objects."
        }
      },
      "type": "object"
    },
    "ListUsersRequest": {
      "properties": {},
      "type": "object"
    },
    "ListUsersResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results."
        },
        "UserSummaryList": {
          "$ref": "#/definitions/UserSummaryList",
          "description": "An array of <code>UserSummary</code> objects that contain information about the users in your instance."
        }
      },
      "type": "object"
    },
    "MaxResult100": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "MaxResult1000": {
      "maximum": 1000,
      "minimum": 1,
      "type": "integer"
    },
    "NextToken": {
      "type": "string"
    },
    "OutboundContactNotPermittedException": {},
    "Password": {
      "pattern": "/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\S]{8,64}$/",
      "type": "string"
    },
    "PhoneNumber": {
      "type": "string"
    },
    "PhoneType": {
      "enum": [
        "SOFT_PHONE",
        "DESK_PHONE"
      ],
      "type": "string"
    },
    "QueueId": {
      "type": "string"
    },
    "QueueReference": {
      "description": "A QueueReference object that contains the the QueueId and ARN for the queue resource for which metrics are returned.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/ARN",
          "description": "The Amazon Resource Name (ARN) of queue."
        },
        "Id": {
          "$ref": "#/definitions/QueueId",
          "description": "The ID of the queue associated with the metrics returned."
        }
      },
      "type": "object"
    },
    "Queues": {
      "items": {
        "$ref": "#/definitions/QueueId"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array"
    },
    "ResourceNotFoundException": {},
    "RoutingProfileId": {
      "type": "string"
    },
    "RoutingProfileName": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "RoutingProfileSummary": {
      "description": "A <code>RoutingProfileSummary</code> object that contains information about a routing profile, including ARN, Id, and Name.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/ARN",
          "description": "The ARN of the routing profile."
        },
        "Id": {
          "$ref": "#/definitions/RoutingProfileId",
          "description": "The identifier of the routing profile."
        },
        "Name": {
          "$ref": "#/definitions/RoutingProfileName",
          "description": "The name of the routing profile."
        }
      },
      "type": "object"
    },
    "RoutingProfileSummaryList": {
      "items": {
        "$ref": "#/definitions/RoutingProfileSummary"
      },
      "type": "array"
    },
    "SecurityProfileId": {
      "type": "string"
    },
    "SecurityProfileIds": {
      "items": {
        "$ref": "#/definitions/SecurityProfileId"
      },
      "maxItems": 10,
      "minItems": 1,
      "type": "array"
    },
    "SecurityProfileName": {
      "type": "string"
    },
    "SecurityProfileSummary": {
      "description": "A <code>SecurityProfileSummary</code> object that contains information about a security profile, including ARN, Id, Name.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/ARN",
          "description": "The ARN of the security profile."
        },
        "Id": {
          "$ref": "#/definitions/SecurityProfileId",
          "description": "The identifier of the security profile."
        },
        "Name": {
          "$ref": "#/definitions/SecurityProfileName",
          "description": "The name of the security profile."
        }
      },
      "type": "object"
    },
    "SecurityProfileSummaryList": {
      "items": {
        "$ref": "#/definitions/SecurityProfileSummary"
      },
      "type": "array"
    },
    "SecurityToken": {
      "format": "password",
      "type": "string"
    },
    "StartOutboundVoiceContactRequest": {
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/Attributes",
          "description": "<p>Specify a custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p> <p>For example, if you want play a greeting when the customer answers the call, you can pass the customer name in attributes similar to the following:</p>"
        },
        "ClientToken": {
          "$ref": "#/definitions/ClientToken",
          "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. If the contact is disconnected, a new contact is started."
        },
        "ContactFlowId": {
          "$ref": "#/definitions/ContactFlowId",
          "description": "<p>The identifier for the contact flow to connect the outbound call to.</p> <p>To find the <code>ContactFlowId</code>, open the contact flow you want to use in the Amazon Connect contact flow editor. The ID for the contact flow is displayed in the address bar as part of the URL. For example, the contact flow ID is the set of characters at the end of the URL, after 'contact-flow/' such as <code>78ea8fd5-2659-4f2b-b528-699760ccfc1b</code>.</p>"
        },
        "DestinationPhoneNumber": {
          "$ref": "#/definitions/PhoneNumber",
          "description": "The phone number of the customer in E.164 format."
        },
        "InstanceId": {
          "$ref": "#/definitions/InstanceId",
          "description": "The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07."
        },
        "QueueId": {
          "$ref": "#/definitions/QueueId",
          "description": "<p>The queue to add the call to. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue used will be the queue defined in the contact flow.</p> <p>To find the <code>QueueId</code>, open the queue you want to use in the Amazon Connect Queue editor. The ID for the queue is displayed in the address bar as part of the URL. For example, the queue ID is the set of characters at the end of the URL, after 'queue/' such as <code>queue/aeg40574-2d01-51c3-73d6-bf8624d2168c</code>.</p>"
        },
        "SourcePhoneNumber": {
          "$ref": "#/definitions/PhoneNumber",
          "description": "The phone number, in E.164 format, associated with your Amazon Connect instance to use for the outbound call."
        }
      },
      "required": [
        "DestinationPhoneNumber",
        "ContactFlowId",
        "InstanceId"
      ],
      "type": "object"
    },
    "StartOutboundVoiceContactResponse": {
      "properties": {
        "ContactId": {
          "$ref": "#/definitions/ContactId",
          "description": "The unique identifier of this contact within your Amazon Connect instance."
        }
      },
      "type": "object"
    },
    "Statistic": {
      "enum": [
        "SUM",
        "MAX",
        "AVG"
      ],
      "type": "string"
    },
    "StopContactRequest": {
      "properties": {
        "ContactId": {
          "$ref": "#/definitions/ContactId",
          "description": "The unique identifier of the contact to end."
        },
        "InstanceId": {
          "$ref": "#/definitions/InstanceId",
          "description": "The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07."
        }
      },
      "required": [
        "ContactId",
        "InstanceId"
      ],
      "type": "object"
    },
    "StopContactResponse": {
      "properties": {},
      "type": "object"
    },
    "Threshold": {
      "description": "A <code>Threshold</code> object that includes a comparison and <code>ThresholdValue</code> to compare to. Used with service level metrics.",
      "properties": {
        "Comparison": {
          "$ref": "#/definitions/Comparison",
          "description": "The Threshold to use to compare service level metrics to. Only \"Less than\" (LT) comparisons are supported."
        },
        "ThresholdValue": {
          "$ref": "#/definitions/ThresholdValue",
          "description": "The value of the threshold to compare the metric to. Only \"Less than\" (LT) comparisons are supported."
        }
      },
      "type": "object"
    },
    "ThresholdValue": {
      "format": "double",
      "type": "number"
    },
    "ThrottlingException": {},
    "Unit": {
      "enum": [
        "SECONDS",
        "COUNT",
        "PERCENT"
      ],
      "type": "string"
    },
    "UpdateContactAttributesRequest": {
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/Attributes",
          "description": "<p>Specify a custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>"
        },
        "InitialContactId": {
          "$ref": "#/definitions/ContactId",
          "description": "The unique identifier of the contact for which to update attributes. This is the identifier for the contact associated with the first interaction with the contact center."
        },
        "InstanceId": {
          "$ref": "#/definitions/InstanceId",
          "description": "The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07."
        }
      },
      "required": [
        "InitialContactId",
        "InstanceId",
        "Attributes"
      ],
      "type": "object"
    },
    "UpdateContactAttributesResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateUserHierarchyRequest": {
      "properties": {
        "HierarchyGroupId": {
          "$ref": "#/definitions/HierarchyGroupId",
          "description": "The identifier for the hierarchy group to assign to the user."
        }
      },
      "type": "object"
    },
    "UpdateUserIdentityInfoRequest": {
      "properties": {
        "IdentityInfo": {
          "$ref": "#/definitions/UserIdentityInfo",
          "description": "A <code>UserIdentityInfo</code> object."
        }
      },
      "required": [
        "IdentityInfo"
      ],
      "type": "object"
    },
    "UpdateUserPhoneConfigRequest": {
      "properties": {
        "PhoneConfig": {
          "$ref": "#/definitions/UserPhoneConfig",
          "description": "A <code>UserPhoneConfig</code> object that contains settings for <code>AfterContactWorkTimeLimit</code>, <code>AutoAccept</code>, <code>DeskPhoneNumber</code>, and <code>PhoneType</code> to assign to the user."
        }
      },
      "required": [
        "PhoneConfig"
      ],
      "type": "object"
    },
    "UpdateUserRoutingProfileRequest": {
      "properties": {
        "RoutingProfileId": {
          "$ref": "#/definitions/RoutingProfileId",
          "description": "The identifier of the routing profile to assign to the user."
        }
      },
      "required": [
        "RoutingProfileId"
      ],
      "type": "object"
    },
    "UpdateUserSecurityProfilesRequest": {
      "properties": {
        "SecurityProfileIds": {
          "$ref": "#/definitions/SecurityProfileIds",
          "description": "The identifiers for the security profiles to assign to the user."
        }
      },
      "required": [
        "SecurityProfileIds"
      ],
      "type": "object"
    },
    "User": {
      "description": "A <code>User</code> object that contains information about a user account in your Amazon Connect instance, including configuration settings.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/ARN",
          "description": "The ARN of the user account."
        },
        "DirectoryUserId": {
          "$ref": "#/definitions/DirectoryUserId",
          "description": "The directory Id for the user account in the existing directory used for identity management."
        },
        "HierarchyGroupId": {
          "$ref": "#/definitions/HierarchyGroupId",
          "description": "The identifier for the hierarchy group assigned to the user."
        },
        "Id": {
          "$ref": "#/definitions/UserId",
          "description": "The identifier of the user account."
        },
        "IdentityInfo": {
          "$ref": "#/definitions/UserIdentityInfo",
          "description": "A <code>UserIdentityInfo</code> object."
        },
        "PhoneConfig": {
          "$ref": "#/definitions/UserPhoneConfig",
          "description": "A <code>UserPhoneConfig</code> object."
        },
        "RoutingProfileId": {
          "$ref": "#/definitions/RoutingProfileId",
          "description": "The identifier of the routing profile assigned to the user."
        },
        "SecurityProfileIds": {
          "$ref": "#/definitions/SecurityProfileIds",
          "description": "The identifier(s) for the security profile assigned to the user."
        },
        "Username": {
          "$ref": "#/definitions/AgentUsername",
          "description": "The user name assigned to the user account."
        }
      },
      "type": "object"
    },
    "UserId": {
      "type": "string"
    },
    "UserIdentityInfo": {
      "description": "A <code>UserIdentityInfo</code> object that contains information about the user's identity, including email address, first name, and last name.",
      "properties": {
        "Email": {
          "$ref": "#/definitions/Email",
          "description": "The email address added to the user account. If you are using SAML for identity management and include this parameter, an <code>InvalidRequestException</code> is returned."
        },
        "FirstName": {
          "$ref": "#/definitions/AgentFirstName",
          "description": "The first name used in the user account. This is required if you are using Amazon Connect or SAML for identity management."
        },
        "LastName": {
          "$ref": "#/definitions/AgentLastName",
          "description": "The last name used in the user account. This is required if you are using Amazon Connect or SAML for identity management."
        }
      },
      "type": "object"
    },
    "UserNotFoundException": {},
    "UserPhoneConfig": {
      "description": "A <code>UserPhoneConfig</code> object that contains information about the user phone configuration settings.",
      "properties": {
        "AfterContactWorkTimeLimit": {
          "$ref": "#/definitions/AfterContactWorkTimeLimit",
          "description": "The After Call Work (ACW) timeout setting, in seconds, for the user."
        },
        "AutoAccept": {
          "$ref": "#/definitions/AutoAccept",
          "description": "The Auto accept setting for the user, Yes or No."
        },
        "DeskPhoneNumber": {
          "$ref": "#/definitions/PhoneNumber",
          "description": "The phone number for the user's desk phone."
        },
        "PhoneType": {
          "$ref": "#/definitions/PhoneType",
          "description": "The phone type selected for the user, either Soft phone or Desk phone."
        }
      },
      "required": [
        "PhoneType"
      ],
      "type": "object"
    },
    "UserSummary": {
      "description": "A <code>UserSummary</code> object that contains Information about a user, including ARN, Id, and user name.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/ARN",
          "description": "The ARN for the user account."
        },
        "Id": {
          "$ref": "#/definitions/UserId",
          "description": "The identifier for the user account."
        },
        "Username": {
          "$ref": "#/definitions/AgentUsername",
          "description": "The Amazon Connect user name for the user account."
        }
      },
      "type": "object"
    },
    "UserSummaryList": {
      "items": {
        "$ref": "#/definitions/UserSummary"
      },
      "type": "array"
    },
    "Value": {
      "format": "double",
      "type": "number"
    },
    "timestamp": {
      "format": "date-time",
      "type": "string"
    }
  }
}
