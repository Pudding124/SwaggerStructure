{
  "swagger": "2.0",
  "schemes": [
    "http",
    "https"
  ],
  "host": "developer.opto22.com",
  "basePath": "/api",
  "info": {
    "contact": {
      "email": "developer@opto22.com",
      "name": "Opto 22",
      "url": "http://developer.opto22.com",
      "x-twitter": "opto22"
    },
    "description": "#### Revised: 2016-09-29\n\n### Overview\ngroov Public API revision 1.\n",
    "title": "groov Public",
    "version": "R3.3a",
    "x-apisguru-categories": [
      "iot"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_opto22_profile_image.jpeg"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "http://developer.opto22.com/static/generated/groov-rest-api/swagger.yaml",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "opto22.com",
    "x-serviceName": "groov"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "api_key": {
      "in": "query",
      "name": "api_key",
      "type": "apiKey"
    }
  },
  "tags": [
    {
      "description": "Provides information about groov itself.",
      "name": "info"
    },
    {
      "description": "Provides information about the user you are authenticated as.",
      "name": "whoami"
    },
    {
      "description": "Provides access to the Data Store devices and tags.",
      "name": "data-store"
    }
  ],
  "paths": {
    "/info": {
      "get": {
        "description": "Get information about groov. No authorization required.",
        "operationId": "groovInfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/groovInfo"
            }
          }
        },
        "tags": [
          "info"
        ]
      }
    },
    "/v1/data-store/devices": {
      "get": {
        "description": "List devices available in the data store. Authorized for admins and editors.",
        "operationId": "listDevices",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/dataStoreDevice"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "data-store"
        ]
      }
    },
    "/v1/data-store/devices/{id}/tags": {
      "get": {
        "description": "List tags of the given device. Authorized for admins and editors.",
        "operationId": "listDeviceTags",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/tagDefinition"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "data-store"
        ]
      },
      "parameters": [
        {
          "description": "ID of the device to use.",
          "format": "int64",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "number"
        }
      ]
    },
    "/v1/data-store/read": {
      "parameters": [
        {
          "description": "Tag references for the tags to read.",
          "in": "body",
          "name": "tags",
          "required": true,
          "schema": {
            "items": {
              "$ref": "#/definitions/tagReference"
            },
            "type": "array"
          }
        }
      ],
      "post": {
        "description": "Read selected tags from the data store. Authorized for admins and editors.",
        "operationId": "batchReadTags",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/tagValue"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "data-store"
        ]
      }
    },
    "/v1/data-store/read/{id}": {
      "get": {
        "description": "Read the current value of a single tag. Authorized for admins and editors.",
        "operationId": "readTag",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/tagValue"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "data-store"
        ]
      },
      "parameters": [
        {
          "description": "ID of the tag to read.",
          "format": "int64",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "number"
        },
        {
          "default": 0,
          "description": "Table index to start reading at.",
          "format": "int32",
          "in": "query",
          "name": "index",
          "required": false,
          "type": "number"
        },
        {
          "default": 1,
          "description": "Number of elements to read from a table.",
          "format": "int32",
          "in": "query",
          "name": "count",
          "required": false,
          "type": "number"
        }
      ]
    },
    "/v1/data-store/tags": {
      "get": {
        "description": "List all data store tags defined in the project. Authorized for admins and editors.",
        "operationId": "listAllTags",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/tagDefinition"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "data-store"
        ]
      }
    },
    "/v1/data-store/write/{id}": {
      "parameters": [
        {
          "description": "ID of the tag to write.",
          "format": "int64",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "number"
        },
        {
          "description": "Value to write to the tag. Must be a string, number, or boolean.",
          "in": "query",
          "name": "value",
          "required": true,
          "type": "string"
        },
        {
          "default": 0,
          "description": "For array tags, the index to write the value to.",
          "format": "int32",
          "in": "query",
          "name": "index",
          "required": false,
          "type": "number"
        }
      ],
      "post": {
        "description": "Writes a new value to the given tag. Authorized for admins and editors.",
        "operationId": "writeTag",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/tagValue"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "data-store"
        ]
      }
    },
    "/whoami": {
      "get": {
        "description": "Get information about the user you are authenticated as. Authorized for admins, editors, operators, and kiosk.",
        "operationId": "whoAmI",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "whoami"
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "groups": {
          "items": {
            "format": "int64",
            "type": "number"
          },
          "type": "array"
        },
        "id": {
          "format": "int64",
          "type": "number"
        },
        "needsPasswordChange": {
          "description": "True if your password is expired",
          "type": "boolean"
        },
        "role": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "role",
        "apiKey",
        "groups",
        "id",
        "needsPasswordChange",
        "email",
        "username"
      ],
      "type": "object"
    },
    "booleanArrayValue": {
      "allOf": [
        {
          "$ref": "#/definitions/tagValue"
        },
        {
          "properties": {
            "value": {
              "items": {
                "type": "boolean"
              },
              "type": "array"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ]
    },
    "booleanValue": {
      "allOf": [
        {
          "$ref": "#/definitions/tagValue"
        },
        {
          "properties": {
            "value": {
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ]
    },
    "dataStoreDevice": {
      "allOf": [
        {
          "$ref": "#/definitions/device"
        },
        {
          "properties": {
            "id": {
              "format": "int64",
              "type": "number"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name"
          ],
          "type": "object"
        }
      ],
      "description": "A Data Store device within a groov project"
    },
    "device": {
      "description": "A generic device within a groov project",
      "discriminator": "deviceType",
      "properties": {
        "deviceType": {
          "type": "string"
        }
      },
      "required": [
        "deviceType"
      ],
      "type": "object"
    },
    "errorValue": {
      "allOf": [
        {
          "$ref": "#/definitions/tagValue"
        },
        {
          "properties": {
            "errorCode": {
              "type": "string"
            },
            "errorMessage": {
              "type": "string"
            }
          },
          "required": [
            "errorCode",
            "errorMessage"
          ],
          "type": "object"
        }
      ]
    },
    "floatArrayValue": {
      "allOf": [
        {
          "$ref": "#/definitions/tagValue"
        },
        {
          "properties": {
            "value": {
              "items": {
                "format": "float",
                "type": "number"
              },
              "type": "array"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ]
    },
    "floatValue": {
      "allOf": [
        {
          "$ref": "#/definitions/tagValue"
        },
        {
          "properties": {
            "value": {
              "format": "float",
              "type": "number"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ]
    },
    "groovInfo": {
      "properties": {
        "currentApiVersion": {
          "description": "The current API version number",
          "format": "int32",
          "type": "number"
        },
        "groovAdminVersion": {
          "description": "The groov admin version number if running on a groov hardware box",
          "type": "string"
        },
        "groovBoxDescription": {
          "description": "The groov box type (GROOV-AT1 or GROOV-AR1)",
          "type": "string"
        },
        "groovNodeRedVersion": {
          "description": "The node red version number if running on a GROOV-AR1 which has node red installed",
          "type": "string"
        },
        "isCoreInUse": {
          "description": "True if Core Features (Opto 22 Controllers, Modbus Devices, Data Store) are in use",
          "type": "boolean"
        },
        "isGroovBox": {
          "description": "True if running on a groov hardware box",
          "type": "boolean"
        },
        "isGroovBoxSetup": {
          "description": "True if running on a groov hardware box which has been setup or true if running on groov Server for Windows",
          "type": "boolean"
        },
        "isLicenseValid": {
          "description": "True if a license is installed, valid, and not expired",
          "type": "boolean"
        },
        "isOpcUaInUse": {
          "description": "True if an OPC-UA device is in use",
          "type": "boolean"
        },
        "licenseType": {
          "description": "The license type (NONE, EXPIRED, SOLO, STANDARD, or ENTERPRISE)",
          "type": "string"
        },
        "minimumApiVersion": {
          "description": "The minimum supported API version number",
          "format": "int32",
          "type": "number"
        },
        "shouldShowTrialDialog": {
          "description": "True if the trial dialog pops up when logging into groov",
          "type": "boolean"
        },
        "timezoneName": {
          "description": "The server's timezone",
          "type": "string"
        },
        "timezoneOffset": {
          "description": "The server's timezone offset from UTC in minutes",
          "format": "int32",
          "type": "number"
        },
        "trialPeriodExpiration": {
          "description": "Milliseconds until trial period is expired",
          "format": "int64",
          "type": "number"
        },
        "warVersion": {
          "description": "The version number of the war",
          "type": "string"
        }
      },
      "required": [
        "isGroovBox",
        "isGroovBoxSetup",
        "isCoreInUse",
        "isOpcUaInUse",
        "isLicenseValid",
        "licenseType",
        "trialPeriodExpiration",
        "shouldShowTrialDialog",
        "groovBoxDescription",
        "groovAdminVersion",
        "groovNodeRedVersion",
        "timezoneOffset",
        "timezoneName",
        "warVersion",
        "minimumApiVersion",
        "currentApiVersion"
      ],
      "type": "object"
    },
    "integerArrayValue": {
      "allOf": [
        {
          "$ref": "#/definitions/tagValue"
        },
        {
          "properties": {
            "value": {
              "items": {
                "format": "int64",
                "type": "number"
              },
              "type": "array"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ]
    },
    "integerValue": {
      "allOf": [
        {
          "$ref": "#/definitions/tagValue"
        },
        {
          "properties": {
            "value": {
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ]
    },
    "stringArrayValue": {
      "allOf": [
        {
          "$ref": "#/definitions/tagValue"
        },
        {
          "properties": {
            "value": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ]
    },
    "stringValue": {
      "allOf": [
        {
          "$ref": "#/definitions/tagValue"
        },
        {
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ]
    },
    "tagDefinition": {
      "properties": {
        "dataType": {
          "enum": [
            "boolean",
            "integer",
            "float",
            "string",
            "booleanArray",
            "integerArray",
            "floatArray",
            "stringArray"
          ],
          "type": "string"
        },
        "deviceId": {
          "format": "int64",
          "type": "number"
        },
        "id": {
          "format": "int64",
          "type": "number"
        },
        "length": {
          "format": "int32",
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "deviceId",
        "name",
        "dataType"
      ],
      "type": "object"
    },
    "tagReference": {
      "properties": {
        "count": {
          "description": "For array tags, the number of elements to read, starting at index.",
          "format": "int32",
          "type": "number"
        },
        "id": {
          "description": "Unique id for the tag.",
          "format": "int64",
          "type": "number"
        },
        "index": {
          "description": "For array tags, the index to start reading at.",
          "format": "int32",
          "type": "number"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "tagValue": {
      "discriminator": "valueType",
      "properties": {
        "valueType": {
          "type": "string"
        }
      },
      "required": [
        "valueType"
      ],
      "type": "object"
    }
  }
}
