{
  "swagger": "2.0",
  "schemes": [
    "https",
    "http"
  ],
  "host": "quicksight.amazonaws.com",
  "basePath": "/",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless, cloud business intelligence service that makes it easy to extend data and insights to every user in your organization. This API interface reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon QuickSight",
    "version": "2018-04-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/quicksight-2018-04-01.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "quicksight"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/quicksight/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "query",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "query",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/accounts/{AwsAccountId}/dashboards/{DashboardId}/embed-url": {
      "get": {
        "description": "<p>Generates a server-side embeddable URL and authorization code. Before this can work properly, first you need to configure the dashboards and user permissions. For more information, see <a href=\"https://docs.aws.amazon.com/en_us/quicksight/latest/user/embedding.html\"> Embedding Amazon QuickSight Dashboards</a>.</p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the userâ€™s browser.</p> <p> <b>CLI Sample:</b> </p> <p>Assume the role with permissions enabled for actions: <code>quickSight:RegisterUser</code> and <code>quicksight:GetDashboardEmbedURL</code>. You can use assume-role, assume-role-with-web-identity, or assume-role-with-saml. </p> <p> <code>aws sts assume-role --role-arn \"arn:aws:iam::111122223333:role/embedding_quicksight_dashboard_role\" --role-session-name embeddingsession</code> </p> <p>If the user does not exist in QuickSight, register the user:</p> <p> <code>aws quicksight register-user --aws-account-id 111122223333 --namespace default --identity-type IAM --iam-arn \"arn:aws:iam::111122223333:role/embedding_quicksight_dashboard_role\" --user-role READER --session-name \"embeddingsession\" --email user123@example.com --region us-east-1</code> </p> <p>Get the URL for the embedded dashboard</p> <p> <code>aws quicksight get-dashboard-embed-url --aws-account-id 111122223333 --dashboard-id 1a1ac2b2-3fc3-4b44-5e5d-c6db6778df89 --identity-type IAM</code> </p>",
        "operationId": "GetDashboardEmbedUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDashboardEmbedUrlRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "DashboardId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDashboardEmbedUrlResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceExistsException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "485": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "486": {
            "description": "DomainNotWhitelistedException",
            "schema": {
              "$ref": "#/definitions/DomainNotWhitelistedException"
            }
          },
          "487": {
            "description": "QuickSightUserNotFoundException",
            "schema": {
              "$ref": "#/definitions/QuickSightUserNotFoundException"
            }
          },
          "488": {
            "description": "IdentityTypeNotSupportedException",
            "schema": {
              "$ref": "#/definitions/IdentityTypeNotSupportedException"
            }
          },
          "489": {
            "description": "SessionLifetimeInMinutesInvalidException",
            "schema": {
              "$ref": "#/definitions/SessionLifetimeInMinutesInvalidException"
            }
          },
          "490": {
            "description": "UnsupportedUserEditionException",
            "schema": {
              "$ref": "#/definitions/UnsupportedUserEditionException"
            }
          },
          "491": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "492": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups": {
      "get": {
        "description": "<p>Lists all user groups in Amazon QuickSight. </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/*</code>.</p> <p>The response is a list of group objects. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight list-groups -\\-aws-account-id=111122223333 -\\-namespace=default </code> </p>",
        "operationId": "ListGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListGroupsRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListGroupsResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "485": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "486": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "487": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates an Amazon QuickSight group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight create-group --aws-account-id=111122223333 --namespace=default --group-name=\"Sales-Management\" --description=\"Sales Management - Forecasting\" </code> </p>",
        "operationId": "CreateGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGroupRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateGroupResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceExistsException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "485": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "486": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "487": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "488": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      }
    },
    "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}": {
      "delete": {
        "description": "<p>Removes a user group from Amazon QuickSight. </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight delete-group -\\-aws-account-id=111122223333 -\\-namespace=default -\\-group-name=Sales-Management </code> </p>",
        "operationId": "DeleteGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteGroupRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "GroupName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteGroupResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "485": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "486": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "get": {
        "description": "<p>Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN). </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is the group object. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight describe-group -\\-aws-account-id=11112222333 -\\-namespace=default -\\-group-name=Sales </code> </p>",
        "operationId": "DescribeGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeGroupRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "GroupName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeGroupResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "485": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "486": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "description": "<p>Changes a group description. </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight update-group --aws-account-id=111122223333 --namespace=default --group-name=Sales --description=\"Sales BI Dashboards\" </code> </p>",
        "operationId": "UpdateGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateGroupRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "GroupName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateGroupResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "485": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "486": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      }
    },
    "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members": {
      "get": {
        "description": "<p>Lists member users in a group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a list of group member objects.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight list-group-memberships -\\-aws-account-id=111122223333 -\\-namespace=default </code> </p>",
        "operationId": "ListGroupMemberships",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListGroupMembershipsRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "GroupName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListGroupMembershipsResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "485": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "486": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "487": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}": {
      "delete": {
        "description": "<p>Removes a user from a group so that the user is no longer a member of the group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The condition resource is the user name.</p> <p>The condition key is <code>quicksight:UserName</code>.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight delete-group-membership --aws-account-id=111122223333 --namespace=default --group-name=Sales-Management --member-name=Charlie </code> </p>",
        "operationId": "DeleteGroupMembership",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteGroupMembershipRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "GroupName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "MemberName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteGroupMembershipResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "485": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "486": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "description": "<p>Adds an Amazon QuickSight user to an Amazon QuickSight group. </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The condition resource is the user name.</p> <p>The condition key is <code>quicksight:UserName</code>.</p> <p>The response is the group member object.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight create-group-membership --aws-account-id=111122223333 --namespace=default --group-name=Sales --member-name=Pat </code> </p>",
        "operationId": "CreateGroupMembership",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGroupMembershipRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "GroupName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "MemberName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateGroupMembershipResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "485": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "486": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      }
    },
    "/accounts/{AwsAccountId}/namespaces/{Namespace}/users": {
      "get": {
        "description": "<p>Returns a list of all of the Amazon QuickSight users belonging to this account. </p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>*</i> </code>.</p> <p>The response is a list of user objects, containing each user's Amazon Resource Name (ARN), AWS Identity and Access Management (IAM) role, and email address. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight list-users --aws-account-id=111122223333 --namespace=default </code> </p>",
        "operationId": "ListUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListUsersRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListUsersResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "485": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "486": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity and Access Management (IAM) identity or role specified in the request. </p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt;</i> </code>.</p> <p>The condition resource is the Amazon Resource Name (ARN) for the IAM user or role, and the session name. </p> <p>The condition keys are <code>quicksight:IamArn</code> and <code>quicksight:SessionName</code>. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight register-user -\\-aws-account-id=111122223333 -\\-namespace=default -\\-email=pat@example.com -\\-identity-type=IAM -\\-user-role=AUTHOR -\\-iam-arn=arn:aws:iam::111122223333:user/Pat </code> </p>",
        "operationId": "RegisterUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUserRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegisterUserResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "ResourceExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceExistsException"
            }
          },
          "486": {
            "description": "PreconditionNotMetException",
            "schema": {
              "$ref": "#/definitions/PreconditionNotMetException"
            }
          },
          "487": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "488": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      }
    },
    "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}": {
      "delete": {
        "description": "<p>Deletes the Amazon QuickSight user that is associated with the identity of the AWS Identity and Access Management (IAM) user or role that's making the call. The IAM user isn't deleted as a result of this call. </p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt; </i> </code>.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight delete-user --aws-account-id=111122223333 --namespace=default --user-name=Pat </code> </p>",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteUserRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteUserResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "485": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "get": {
        "description": "<p>Returns information about a user, given the user name. </p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt;</i> </code>. </p> <p>The response is a user object that contains the user's Amazon Resource Name (ARN), AWS Identity and Access Management (IAM) role, and email address. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight describe-user --aws-account-id=111122223333 --namespace=default --user-name=Pat </code> </p>",
        "operationId": "DescribeUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeUserRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeUserResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "485": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "description": "<p>Updates an Amazon QuickSight user.</p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt;</i> </code>. </p> <p>The response is a user object that contains the user's Amazon QuickSight user name, email address, active or inactive status in Amazon QuickSight, Amazon QuickSight role, and Amazon Resource Name (ARN). </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight update-user --user-name=Pat --role=ADMIN --email=new_address@amazon.com --aws-account-id=111122223333 --namespace=default --region=us-east-1 </code> </p>",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateUserResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "485": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      }
    },
    "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/groups": {
      "get": {
        "description": "<p>Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.</p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt;</i> </code>. </p> <p>The response is a one or more group objects. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight list-user-groups -\\-user-name=Pat -\\-aws-account-id=111122223333 -\\-namespace=default -\\-region=us-east-1 </code> </p>",
        "operationId": "ListUserGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListUserGroupsRequest"
            }
          },
          {
            "in": "path",
            "name": "AwsAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListUserGroupsResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "485": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    }
  },
  "definitions": {
    "AccessDeniedException": {},
    "Arn": {
      "type": "string"
    },
    "AwsAccountId": {
      "maxLength": 12,
      "minLength": 12,
      "pattern": "^[0-9]{12}$",
      "type": "string"
    },
    "Boolean": {
      "type": "boolean"
    },
    "CreateGroupMembershipRequest": {
      "properties": {},
      "type": "object"
    },
    "CreateGroupMembershipResponse": {
      "properties": {
        "GroupMember": {
          "$ref": "#/definitions/GroupMember",
          "description": "The group member."
        },
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "CreateGroupRequest": {
      "description": "The request object for this operation. ",
      "properties": {
        "Description": {
          "$ref": "#/definitions/GroupDescription",
          "description": "A description for the group that you want to create."
        },
        "GroupName": {
          "$ref": "#/definitions/GroupName",
          "description": "A name for the group that you want to create."
        }
      },
      "required": [
        "GroupName"
      ],
      "type": "object"
    },
    "CreateGroupResponse": {
      "description": "The response object for this operation.",
      "properties": {
        "Group": {
          "$ref": "#/definitions/Group",
          "description": "The name of the group."
        },
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "DeleteGroupMembershipRequest": {
      "properties": {},
      "type": "object"
    },
    "DeleteGroupMembershipResponse": {
      "properties": {
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "DeleteGroupRequest": {
      "properties": {},
      "type": "object"
    },
    "DeleteGroupResponse": {
      "properties": {
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "DeleteUserRequest": {
      "properties": {},
      "type": "object"
    },
    "DeleteUserResponse": {
      "properties": {
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "DescribeGroupRequest": {
      "properties": {},
      "type": "object"
    },
    "DescribeGroupResponse": {
      "properties": {
        "Group": {
          "$ref": "#/definitions/Group",
          "description": "The name of the group."
        },
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "DescribeUserRequest": {
      "properties": {},
      "type": "object"
    },
    "DescribeUserResponse": {
      "properties": {
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        },
        "User": {
          "$ref": "#/definitions/User",
          "description": "The user name."
        }
      },
      "type": "object"
    },
    "DomainNotWhitelistedException": {},
    "EmbeddingUrl": {
      "format": "password",
      "type": "string"
    },
    "GetDashboardEmbedUrlRequest": {
      "properties": {},
      "type": "object"
    },
    "GetDashboardEmbedUrlResponse": {
      "properties": {
        "EmbedUrl": {
          "$ref": "#/definitions/EmbeddingUrl",
          "description": "URL that you can put into your server-side webpage to embed your dashboard. This URL is valid for 5 minutes, and the resulting session is valid for 10 hours. The API provides the URL with an auth_code that enables a single-signon session. "
        },
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "Group": {
      "description": "A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. Currently, an Amazon QuickSight subscription can't contain more than 500 Amazon QuickSight groups.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/Arn",
          "description": "The Amazon Resource Name (ARN) for the group."
        },
        "Description": {
          "$ref": "#/definitions/GroupDescription",
          "description": "The group description."
        },
        "GroupName": {
          "$ref": "#/definitions/GroupName",
          "description": "The name of the group."
        }
      },
      "type": "object"
    },
    "GroupDescription": {
      "maxLength": 512,
      "minLength": 1,
      "type": "string"
    },
    "GroupList": {
      "items": {
        "$ref": "#/definitions/Group"
      },
      "type": "array"
    },
    "GroupMember": {
      "description": "A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. ",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/Arn",
          "description": "The Amazon Resource Name (ARN) for the group member (user)."
        },
        "MemberName": {
          "$ref": "#/definitions/GroupMemberName",
          "description": "The name of the group member (user)."
        }
      },
      "type": "object"
    },
    "GroupMemberList": {
      "items": {
        "$ref": "#/definitions/GroupMember"
      },
      "type": "array"
    },
    "GroupMemberName": {
      "maxLength": 256,
      "minLength": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "GroupName": {
      "minLength": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "IdentityType": {
      "enum": [
        "IAM",
        "QUICKSIGHT"
      ],
      "type": "string"
    },
    "IdentityTypeNotSupportedException": {},
    "InternalFailureException": {},
    "InvalidNextTokenException": {},
    "InvalidParameterValueException": {},
    "LimitExceededException": {},
    "ListGroupMembershipsRequest": {
      "properties": {},
      "type": "object"
    },
    "ListGroupMembershipsResponse": {
      "properties": {
        "GroupMemberList": {
          "$ref": "#/definitions/GroupMemberList",
          "description": "The list of the members of the group."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "A pagination token that can be used in a subsequent request."
        },
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "ListGroupsRequest": {
      "properties": {},
      "type": "object"
    },
    "ListGroupsResponse": {
      "properties": {
        "GroupList": {
          "$ref": "#/definitions/GroupList",
          "description": "The list of the groups."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "A pagination token that can be used in a subsequent request."
        },
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "ListUserGroupsRequest": {
      "properties": {},
      "type": "object"
    },
    "ListUserGroupsResponse": {
      "properties": {
        "GroupList": {
          "$ref": "#/definitions/GroupList",
          "description": "The list of groups the user is a member of."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "A pagination token that can be used in a subsequent request."
        },
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The HTTP status of the request."
        }
      },
      "type": "object"
    },
    "ListUsersRequest": {
      "properties": {},
      "type": "object"
    },
    "ListUsersResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "A pagination token that can be used in a subsequent request."
        },
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        },
        "UserList": {
          "$ref": "#/definitions/UserList",
          "description": "The list of users."
        }
      },
      "type": "object"
    },
    "MaxResults": {
      "maximum": 100000,
      "minimum": 1,
      "type": "integer"
    },
    "Namespace": {
      "pattern": "default",
      "type": "string"
    },
    "PreconditionNotMetException": {},
    "QuickSightUserNotFoundException": {},
    "RegisterUserRequest": {
      "properties": {
        "Email": {
          "$ref": "#/definitions/String",
          "description": "The email address of the user that you want to register."
        },
        "IamArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN of the IAM user or role that you are registering with Amazon QuickSight. "
        },
        "IdentityType": {
          "$ref": "#/definitions/IdentityType",
          "description": "<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>"
        },
        "SessionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the session with the assumed IAM role. By using this parameter, you can register multiple users with the same IAM role, provided that each has a different session name. For more information on assuming IAM roles, see <a href=\"https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html\"> <code>assume-role</code> </a> in the <i>AWS CLI Reference.</i> "
        },
        "UserName": {
          "$ref": "#/definitions/UserName",
          "description": "The Amazon QuickSight user name that you want to create for the user you are registering."
        },
        "UserRole": {
          "$ref": "#/definitions/UserRole",
          "description": "<p>The Amazon QuickSight role of the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, data sets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul>"
        }
      },
      "required": [
        "IdentityType",
        "Email",
        "UserRole"
      ],
      "type": "object"
    },
    "RegisterUserResponse": {
      "properties": {
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        },
        "User": {
          "$ref": "#/definitions/User",
          "description": "The user name."
        },
        "UserInvitationUrl": {
          "$ref": "#/definitions/String",
          "description": "The URL the user visits to complete registration and provide a password. This is returned only for users with an identity type of <code>QUICKSIGHT</code>."
        }
      },
      "type": "object"
    },
    "ResourceExistsException": {},
    "ResourceNotFoundException": {},
    "ResourceUnavailableException": {},
    "SessionLifetimeInMinutes": {
      "maximum": 600,
      "minimum": 15,
      "type": "integer"
    },
    "SessionLifetimeInMinutesInvalidException": {},
    "StatusCode": {
      "type": "integer"
    },
    "String": {
      "type": "string"
    },
    "ThrottlingException": {},
    "UnsupportedUserEditionException": {},
    "UpdateGroupRequest": {
      "properties": {
        "Description": {
          "$ref": "#/definitions/GroupDescription",
          "description": "The description for the group that you want to update."
        }
      },
      "type": "object"
    },
    "UpdateGroupResponse": {
      "properties": {
        "Group": {
          "$ref": "#/definitions/Group",
          "description": "The name of the group."
        },
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        }
      },
      "type": "object"
    },
    "UpdateUserRequest": {
      "properties": {
        "Email": {
          "$ref": "#/definitions/String",
          "description": "The email address of the user that you want to update."
        },
        "Role": {
          "$ref": "#/definitions/UserRole",
          "description": "<p>The Amazon QuickSight role of the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, data sets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul>"
        }
      },
      "required": [
        "Email",
        "Role"
      ],
      "type": "object"
    },
    "UpdateUserResponse": {
      "properties": {
        "RequestId": {
          "$ref": "#/definitions/String",
          "description": "The AWS request ID for this operation."
        },
        "Status": {
          "$ref": "#/definitions/StatusCode",
          "description": "The http status of the request."
        },
        "User": {
          "$ref": "#/definitions/User",
          "description": "The Amazon QuickSight user."
        }
      },
      "type": "object"
    },
    "User": {
      "description": "A registered user of Amazon QuickSight. Currently, an Amazon QuickSight subscription can't contain more than 20 million users.",
      "properties": {
        "Active": {
          "$ref": "#/definitions/Boolean",
          "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password"
        },
        "Arn": {
          "$ref": "#/definitions/Arn",
          "description": "The Amazon Resource Name (ARN) for the user."
        },
        "Email": {
          "$ref": "#/definitions/String",
          "description": "The user's email address."
        },
        "IdentityType": {
          "$ref": "#/definitions/IdentityType",
          "description": "The type of identity authentication used by the user."
        },
        "Role": {
          "$ref": "#/definitions/UserRole",
          "description": "The Amazon QuickSight role for the user."
        },
        "UserName": {
          "$ref": "#/definitions/UserName",
          "description": "The user's user name."
        }
      },
      "type": "object"
    },
    "UserList": {
      "items": {
        "$ref": "#/definitions/User"
      },
      "type": "array"
    },
    "UserName": {
      "minLength": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "UserRole": {
      "enum": [
        "ADMIN",
        "AUTHOR",
        "READER",
        "RESTRICTED_AUTHOR",
        "RESTRICTED_READER"
      ],
      "type": "string"
    },
    "boolean": {
      "type": "boolean"
    }
  }
}
