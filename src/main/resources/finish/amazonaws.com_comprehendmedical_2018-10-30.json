{
  "swagger": "2.0",
  "schemes": [
    "https",
    "http"
  ],
  "host": "comprehendmedical.amazonaws.com",
  "basePath": "/",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": " Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents. ",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Comprehend Medical",
    "version": "2018-10-30",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/comprehendmedical-2018-10-30.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "comprehendmedical"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/comprehendmedical/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "query",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "query",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": " Inspects the clinical text for a variety of medical entities and returns specific information about them such as entity category, location, and confidence score on that information .",
        "operationId": "DetectEntities",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DetectEntitiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DetectEntitiesResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "484": {
            "description": "InvalidEncodingException",
            "schema": {
              "$ref": "#/definitions/InvalidEncodingException"
            }
          },
          "485": {
            "description": "TextSizeLimitExceededException",
            "schema": {
              "$ref": "#/definitions/TextSizeLimitExceededException"
            }
          }
        }
      }
    },
    "/#DetectPHI": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": " Inspects the clinical text for personal health information (PHI) entities and entity category, location, and confidence score on that information.",
        "operationId": "DetectPHI",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DetectPHIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DetectPHIResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "484": {
            "description": "InvalidEncodingException",
            "schema": {
              "$ref": "#/definitions/InvalidEncodingException"
            }
          },
          "485": {
            "description": "TextSizeLimitExceededException",
            "schema": {
              "$ref": "#/definitions/TextSizeLimitExceededException"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Attribute": {
      "description": " An extracted segment of the text that is an attribute of an entity, or otherwise related to an entity, such as the dosage of a medication taken. It contains information about the attribute such as id, begin and end offset within the input text, and the segment of the input text. ",
      "properties": {
        "BeginOffset": {
          "$ref": "#/definitions/Integer",
          "description": " The 0-based character offset in the input text that shows where the attribute begins. The offset returns the UTF-8 code point in the string. "
        },
        "EndOffset": {
          "$ref": "#/definitions/Integer",
          "description": " The 0-based character offset in the input text that shows where the attribute ends. The offset returns the UTF-8 code point in the string. "
        },
        "Id": {
          "$ref": "#/definitions/Integer",
          "description": " The numeric identifier for this attribute. This is a monotonically increasing id unique within this response rather than a global unique identifier. "
        },
        "RelationshipScore": {
          "$ref": "#/definitions/Float",
          "description": " The level of confidence that Comprehend Medical has that this attribute is correctly related to this entity. "
        },
        "Score": {
          "$ref": "#/definitions/Float",
          "description": " The level of confidence that Comprehend Medical has that the segment of text is correctly recognized as an attribute. "
        },
        "Text": {
          "$ref": "#/definitions/String",
          "description": " The segment of input text extracted as this attribute."
        },
        "Traits": {
          "$ref": "#/definitions/TraitList",
          "description": " Contextual information for this attribute. "
        },
        "Type": {
          "$ref": "#/definitions/EntitySubType",
          "description": " The type of attribute. "
        }
      },
      "type": "object"
    },
    "AttributeList": {
      "items": {
        "$ref": "#/definitions/Attribute"
      },
      "type": "array"
    },
    "AttributeName": {
      "enum": [
        "SIGN",
        "SYMPTOM",
        "DIAGNOSIS",
        "NEGATION"
      ],
      "type": "string"
    },
    "BoundedLengthString": {
      "maxLength": 20000,
      "minLength": 1,
      "type": "string"
    },
    "DetectEntitiesRequest": {
      "properties": {
        "Text": {
          "$ref": "#/definitions/BoundedLengthString",
          "description": " A UTF-8 text string containing the clinical content being examined for entities. Each string must contain fewer than 20,000 bytes of characters."
        }
      },
      "required": [
        "Text"
      ],
      "type": "object"
    },
    "DetectEntitiesResponse": {
      "properties": {
        "Entities": {
          "$ref": "#/definitions/EntityList",
          "description": " The collection of medical entities extracted from the input text and their associated information. For each entity, the response provides the entity text, the entity category, where the entity text begins and ends, and the level of confidence that Comprehend Medical has in the detection and analysis. Attributes and traits of the entity are also returned."
        },
        "PaginationToken": {
          "$ref": "#/definitions/String",
          "description": " If the result of the previous request to DetectEntities was truncated, include the Paginationtoken to fetch the next page of entities."
        },
        "UnmappedAttributes": {
          "$ref": "#/definitions/UnmappedAttributeList",
          "description": " Attributes extracted from the input text that we were unable to relate to an entity."
        }
      },
      "required": [
        "Entities"
      ],
      "type": "object"
    },
    "DetectPHIRequest": {
      "properties": {
        "Text": {
          "$ref": "#/definitions/BoundedLengthString",
          "description": " A UTF-8 text string containing the clinical content being examined for PHI entities. Each string must contain fewer than 20,000 bytes of characters. "
        }
      },
      "required": [
        "Text"
      ],
      "type": "object"
    },
    "DetectPHIResponse": {
      "properties": {
        "Entities": {
          "$ref": "#/definitions/EntityList",
          "description": " The collection of PHI entities extracted from the input text and their associated information. For each entity, the response provides the entity text, the entity category, where the entity text begins and ends, and the level of confidence that Comprehend Medical has in its detection. "
        },
        "PaginationToken": {
          "$ref": "#/definitions/String",
          "description": " If the result of the previous request to DetectPHI was truncated, include the Paginationtoken to fetch the next page of PHI entities. "
        }
      },
      "required": [
        "Entities"
      ],
      "type": "object"
    },
    "Entity": {
      "description": " Provides information about an extracted medical entity.",
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/AttributeList",
          "description": " The extracted attributes that relate to this entity."
        },
        "BeginOffset": {
          "$ref": "#/definitions/Integer",
          "description": " The 0-based character offset in the input text that shows where the entity begins. The offset returns the UTF-8 code point in the string. "
        },
        "Category": {
          "$ref": "#/definitions/EntityType",
          "description": " The category of the entity."
        },
        "EndOffset": {
          "$ref": "#/definitions/Integer",
          "description": " The 0-based character offset in the input text that shows where the entity ends. The offset returns the UTF-8 code point in the string. "
        },
        "Id": {
          "$ref": "#/definitions/Integer",
          "description": " The numeric identifier for the entity. This is a monotonically increasing id unique within this response rather than a global unique identifier. "
        },
        "Score": {
          "$ref": "#/definitions/Float",
          "description": "The level of confidence that Comprehend Medical has in the accuracy of the detection."
        },
        "Text": {
          "$ref": "#/definitions/String",
          "description": " The segment of input text extracted as this entity."
        },
        "Traits": {
          "$ref": "#/definitions/TraitList",
          "description": "Contextual information for the entity"
        },
        "Type": {
          "$ref": "#/definitions/EntitySubType",
          "description": " Describes the specific type of entity with category of entities. "
        }
      },
      "type": "object"
    },
    "EntityList": {
      "items": {
        "$ref": "#/definitions/Entity"
      },
      "type": "array"
    },
    "EntitySubType": {
      "enum": [
        "NAME",
        "DOSAGE",
        "ROUTE_OR_MODE",
        "FORM",
        "FREQUENCY",
        "DURATION",
        "GENERIC_NAME",
        "BRAND_NAME",
        "STRENGTH",
        "RATE",
        "ACUITY",
        "TEST_NAME",
        "TEST_VALUE",
        "TEST_UNITS",
        "PROCEDURE_NAME",
        "TREATMENT_NAME",
        "DATE",
        "AGE",
        "CONTACT_POINT",
        "EMAIL",
        "IDENTIFIER",
        "URL",
        "ADDRESS",
        "PROFESSION",
        "SYSTEM_ORGAN_SITE",
        "DIRECTION",
        "QUALITY",
        "QUANTITY"
      ],
      "type": "string"
    },
    "EntityType": {
      "enum": [
        "MEDICATION",
        "MEDICAL_CONDITION",
        "PROTECTED_HEALTH_INFORMATION",
        "TEST_TREATMENT_PROCEDURE",
        "ANATOMY"
      ],
      "type": "string"
    },
    "Float": {
      "format": "float",
      "type": "number"
    },
    "Integer": {
      "type": "integer"
    },
    "InternalServerException": {},
    "InvalidEncodingException": {},
    "InvalidRequestException": {},
    "ServiceUnavailableException": {},
    "String": {
      "minLength": 1,
      "type": "string"
    },
    "TextSizeLimitExceededException": {},
    "TooManyRequestsException": {},
    "Trait": {
      "description": " Provides contextual information about the extracted entity. ",
      "properties": {
        "Name": {
          "$ref": "#/definitions/AttributeName",
          "description": " Provides a name or contextual description about the trait. "
        },
        "Score": {
          "$ref": "#/definitions/Float",
          "description": " The level of confidence that Comprehend Medical has in the accuracy of this trait."
        }
      },
      "type": "object"
    },
    "TraitList": {
      "items": {
        "$ref": "#/definitions/Trait"
      },
      "type": "array"
    },
    "UnmappedAttribute": {
      "description": " An attribute that we extracted, but were unable to relate to an entity. ",
      "properties": {
        "Attribute": {
          "$ref": "#/definitions/Attribute",
          "description": " The specific attribute that has been extracted but not mapped to an entity. "
        },
        "Type": {
          "$ref": "#/definitions/EntityType",
          "description": " The type of the attribute, could be one of the following values: \"MEDICATION\", \"MEDICAL_CONDITION\", \"ANATOMY\", \"TEST_AND_TREATMENT_PROCEDURE\" or \"PERSONAL_HEALTH_INFORMATION\". "
        }
      },
      "type": "object"
    },
    "UnmappedAttributeList": {
      "items": {
        "$ref": "#/definitions/UnmappedAttribute"
      },
      "type": "array"
    }
  }
}
